{"config":{"lang":["de"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home Assistant, ESP8266 und mehr...","text":"<p>Nachfolgend ein paar Anleitungen und Anregungen f\u00fcr die Realisierung von smarten Hausprojekten. Home Assistant wird als Zentrale eingesetzt.</p> <p>Bisher vorhanden:</p> <ul> <li>verschiedene ESP8266 NodeMCUs zum Auslesen von Gasz\u00e4hler und Stromz\u00e4hler</li> <li>Wasserz\u00e4hler mit ESP32-Cam (AI-on-the-edge-device)</li> <li>Auslesen einer Solvis Heizung via Modbus TCP</li> <li>Feinstaubsensor auf ESP8266-Basis von Luftdaten.info</li> <li>Austausch von mehreren Eltako Stromsto\u00dfrelais durch ein Shelly 1PM zur smarten Flurlichtschaltung</li> <li>DIY Halterung f\u00fcr Unifi APs</li> <li>DIY Lichtrahmen mit WLED und Home Assistant</li> <li>Sidewinder X1 3D-Drucker mit LED-Statusbeleuchtung</li> <li>PixelIT LED Matrix Clock (smarte LED-Matrix Uhr)</li> </ul> <p>Hier gehts zur Projekt\u00fcbersicht</p>"},{"location":"projekte/feinstaubsensor/","title":"Feinstaubsensor mit ESP8266 und Home Assistant","text":"<p>Nachfolgend ein paar Infos wie man einen ESP8266-basierenden Feinstaubsensor nach Anleitung von Luftdaten.info in Home Assistant einbindet. Zus\u00e4tzlich wird ein m\u00f6gliches Geh\u00e4use gezeigt da das Verstauen der Elektronik gezeigt.</p>"},{"location":"projekte/feinstaubsensor/#benotigte-hardware","title":"ben\u00f6tigte Hardware","text":"<ul> <li>ESP8266</li> <li>etwas Kabel</li> <li>etwas Schlauch (z.B. Aquarienschlauch f\u00fcr CO2)</li> <li>Feinstaubsensormodul SDS011</li> <li>(optionale weitere Sensoren), hier DHT22 f\u00fcr Temperatur und Luftfeuchte</li> <li>Geh\u00e4use, hier eine Abzweigdose</li> </ul>"},{"location":"projekte/feinstaubsensor/#einrichtung","title":"Einrichtung","text":"<p>Die Einrichtung wird hier nicht beschrieben, siehe die Anleitungen unter Luftdaten.info</p>"},{"location":"projekte/feinstaubsensor/#home-assistant","title":"Home Assistant","text":"<p>Die Firmware von Luftdaten.info bietet auch eine lokale API-Schnittstelle die sich per Home-Assistant auslesen l\u00e4sst.</p>  <p>Auszug configuration.yaml</p> <pre><code>  - platform: command_line\n    name: \"Luftdata PM10\"\n    command: 'curl http://ipfeinstaubsensor/data.json'\n    value_template: \"{{ value_json.sensordatavalues[0].value | round(2) }}\"\n    unit_of_measurement: \"\u00b5g/m\u00b3\"\n  - platform: command_line\n    name: \"Luftdata PM2.5\"\n    command: 'curl http://ipfeinstaubsensor/data.json'\n    value_template: \"{{ value_json.sensordatavalues[1].value | round(2) }}\"\n    unit_of_measurement: \"\u00b5g/m\u00b3\"\n  - platform: command_line\n    name: \"Luftdata Temperatur DHT22\"\n    command: 'curl http://ipfeinstaubsensor/data.json'\n    value_template: \"{{ value_json.sensordatavalues[2].value | round(1) }}\"\n    unit_of_measurement: \"\u00b0C\"\n  - platform: command_line\n    name: \"Luftdata Luftfeuchte DHT22\"\n    command: 'curl http://ipfeinstaubsensor/data.json'\n    value_template: \"{{ value_json.sensordatavalues[3].value | round(1) }}\"\n    unit_of_measurement: \"%\"\n  - platform: command_line\n    name: \"Luftdata_WLAN_Empfang\"\n    command: 'curl http://ipfeinstaubsensor/data.json'\n    value_template: \"{{ value_json.sensordatavalues[7].value | round(0) }}\"\n    unit_of_measurement: \"dBm\"\n\n  - platform: statistics\n    name: pm10 stats\n    entity_id: sensor.luftdata_pm10\n    max_age:\n      minutes: 60\n  - platform: statistics\n    name: pm25 stats\n    entity_id: sensor.luftdata_pm2_5\n    max_age:\n      minutes: 60\n</code></pre>"},{"location":"projekte/gasverbrauch/","title":"Gasz\u00e4hler mit ESP8266 und Home Assistant auslesen","text":"<p>Ein Standardgasz\u00e4hler hat auf den letzen Ziffern einen Magneten verbaut, der bei jedem Durchlauf mit einem Reed-Kontakt ausgelesen werden kann. Ein Reed-Kontakt (Magnetschalter) erzeugt bei jedem Durchlauf einen Impuls. Diese Impulse werden per ESPhome gez\u00e4hlt und in die Kubikmeter umgerechnet. 1 Impuls entspricht 0,01 m\u00b3.</p>"},{"location":"projekte/gasverbrauch/#benotigte-hardware","title":"ben\u00f6tigte Hardware","text":"<ul> <li>ESP8266 NodeMCU</li> <li>Reed Sensor, z.B. MK-471B bei Reichelt</li> <li>K\u00e4belchen</li> <li>USB-Netzteil</li> <li>Geh\u00e4use, z.B. Kabelabzweigdose</li> </ul>"},{"location":"projekte/gasverbrauch/#software-auf-esp8266","title":"Software auf ESP8266","text":"<ul> <li>ESPHome</li> </ul>"},{"location":"projekte/gasverbrauch/#auszug-esphome-yaml","title":"Auszug ESPhome YAML","text":"<pre><code>  - platform: pulse_counter\n    pin: \n      number: GPIO5\n      mode: INPUT_PULLUP\n    name: \"Gasverbrauch\"\n    update_interval : 60s\n    filters:\n      - lambda: |-\n          static float total_value = 0.0;\n          total_value += x * 0.01;\n          return total_value;\n    unit_of_measurement: \"m\u00b3\"\n    accuracy_decimals: 2\n    icon: 'mdi:fire'\n</code></pre>"},{"location":"projekte/gasverbrauch/#auszug-home-assistant-yaml","title":"Auszug Home Assistant YAML","text":"<pre><code>sensor:\n\nutility_meter:\n  gasverbrauch_daily:\n    source: sensor.gasverbrauch\n    cycle: daily\n  gasverbrauch_weekly:  \n    source: sensor.gasverbrauch\n    cycle: weekly\n  gasverbrauch_monthly:\n    source: sensor.gasverbrauch\n    cycle: monthly\n  gasverbrauch_yearly:\n    source: sensor.gasverbrauch\n    cycle: yearly\n</code></pre>"},{"location":"projekte/gasverbrauch/#auswertung-in-grafana","title":"Auswertung in Grafana","text":"<p>Zur besseren Darstellung der Verbrauchsdaten bietet sich Grafana an. Die Daten von Home Assistant werden hier in eine InfluxDB geschrieben und \u00fcber Grafana visualisiert.</p>"},{"location":"projekte/halterung-unif-ac-pro/","title":"DIY Halterung f\u00fcr Unifi AC-Pro Accesspoint","text":"<p>Unifi APs werden entweder an der Decke oder an einer Wand montiert. Falls man sich die L\u00f6cher bei einer Wandmontage sparen m\u00f6chte, z.B. weil man den AP auf einem Regal o.\u00e4. platzieren m\u00f6chte, hier ein kleiner Tipp f\u00fcr eine DIY-Halterung.</p> <p>Ben\u00f6tigtes Material:</p> <ul> <li>Eine Unterlage, z.B. Holzbrett</li> <li>Kabelsammelhalterung in der H\u00f6he 4,5 cm (z.B. die hier)</li> <li>paar kurze Schrauben</li> </ul> <p>Die Kabelsammelhalter rasten in der ge\u00f6ffneten Position genau in den runden Rasterring auf der R\u00fcckseite des APs ein. Dadurch kann er nun recht stabil in die Kabelsammelhalter gesteckt werden</p>"},{"location":"projekte/halterung-unif-ac-pro/#fotos","title":"Fotos","text":""},{"location":"projekte/lichtrahmen/","title":"DIY Lichtrahmen mit WLED und Home Assistant","text":"<p>Inspiriert wurde das von folgender Seite bzw. die Reflektion-Lichtskulpturen.  Der Lichtrahmen besteht aus schwarz eloxierten Aluprofilen inklusive Diffusor und ist mit Abstand zur Wand montiert, so dass keine einzelnen LEDs mehr sichtbar sind. Die Aufh\u00e4ngung erfolgt mittels einem fast unsichtbaren Nylon-Faden wie bei einem Bilderrahmen.</p>"},{"location":"projekte/lichtrahmen/#benotigtes-werkzeug","title":"Ben\u00f6tigtes Werkzeug","text":"<ul> <li>Gehrungss\u00e4ge f\u00fcr Metall (je pr\u00e4ziser desto besser)</li> <li>evtl. kleine Metalls\u00e4ge f\u00fcr Feinarbeiten (Aussparung LED-Stromzuf\u00fchrung)</li> <li>L\u00f6tk\u00f6lben</li> <li>Feilen/Schleifpapier zum Entgraten</li> <li>3D-Drucker</li> <li>Bohrmaschine/Akkuschrauber mit 2 mm Bohrer</li> </ul>"},{"location":"projekte/lichtrahmen/#benotigtes-material","title":"Ben\u00f6tigtes Material","text":"<ul> <li>Alu-Profile inkl. Diffusor-Abdeckung (z.B.diese hier)</li> <li>L-Verbinder f\u00fcr die Alu-Profile: Hier habe ich diese hier verwendet, und im Cura-Slicer auf die Ma\u00dfe 22x22x4mm skaliert, gedruck mit PLA</li> <li>Acryl-Rundst\u00e4be als Abstandshalter zur Wand (hier 5 mm, geht auch d\u00fcnner)</li> <li>Nylon-Schnur (Drachenschnur) f\u00fcr die Aufh\u00e4ngung wie ein Bilderrahmen</li> <li>LED-Streifen (hier ein RGBWW-Streifen mit 60 LEDs/m auf Basis mit SK6812 Modulen f\u00fcr die individuelle Steuerung und einem separaten Warmweis-Kanal, Betriebsspannung 5V, L\u00e4nge 5m) (AliExpress oder Amazon)</li> <li>5V/10A Netzteil (3-4 A reichen f\u00fcr die Anzahl LEDs auch aus)</li> <li>Kabel um die einzelnen LED-Segmente miteinander zu verbinden</li> <li>ESP32 f\u00fcr die Ansteuerung</li> <li>WLED als Software auf ESP32 f\u00fcr die Ansteuerung der LEDs </li> </ul>"},{"location":"projekte/lichtrahmen/#hinweise-bevor-es-losgeht","title":"Hinweise bevor es losgeht","text":"<ul> <li>Aluminium ist weich, und schwarz eloxiertes Aluminium ist noch empfindlicher da jeder Kratzer sofort die schwarze Farbe l\u00f6st und unsch\u00f6ne Stellen zur\u00fcckl\u00e4sst. Also alle Arbeiten mit dem Aluminium sehr sorgf\u00e4ltig ausf\u00fchren. Z.B. immer Stoff oder T\u00fccher unterlegen, beim S\u00e4gen die Gehrungss\u00e4ge auskleiden.</li> <li>Alle Arbeiten an den Alu-Profilen am besten an einem Probest\u00fcck erstmal testweise durchf\u00fchren (z.B. das S\u00e4gen oder Bohren von L\u00f6chern)</li> </ul>"},{"location":"projekte/lichtrahmen/#bau-des-lichtrahmens","title":"Bau des Lichtrahmens","text":""},{"location":"projekte/lichtrahmen/#aluprofile-zuschneiden","title":"Aluprofile zuschneiden","text":"<p>Sorgf\u00e4ltig und pr\u00e4zise s\u00e4gen! Am besten die Alu-Profile mit einer Schraubzwinge oder \u00e4hnlichem fixieren. Beachtet, dass das Alu sehr empfindlich ist und Kratzer direkt sichtbar sind. Am besten immer mit Stoff Kontaktfl\u00e4chen sch\u00fctzen. Mehrmals pr\u00fcfen ob man auch den Winkel in die richtige Richtung s\u00e4gt.. </p>"},{"location":"projekte/lichtrahmen/#aluprofile-zusammensetzen","title":"Aluprofile zusammensetzen","text":"<p>Sind die Aluprofile zuges\u00e4gt und bilden eine Rahmen, muss dieser zusammengesteckt werden. Ich druckte dazu diese hier  aus und skalierte sie f\u00fcr das Aluprofil mit folgenden Werten: 22x22x4 mm (LxBxH). Hier am besten ein paar Probedrucke anfertigen und schauen ob diese sch\u00f6n b\u00fcndig passen. Unter dem Verbinder m\u00fcssen noch die Kabel f\u00fcr die Verbindung der einzelnen LED-Streifen hindurchpassen. </p>"},{"location":"projekte/lichtrahmen/#locher-fur-aufhangung-bohren","title":"L\u00f6cher f\u00fcr Aufh\u00e4ngung bohren","text":"<p>In das Aluprofil f\u00fcr die Oberseite des Lichtrahmens werden mit einem 2 mm Bohrer zwei L\u00f6cher f\u00fcr die Aufh\u00e4ngung gebohrt. Die L\u00f6cher entgraten. Sp\u00e4ter werden hier die Schn\u00fcre f\u00fcr die Aufh\u00e4ngung durchgef\u00fchrt. </p>"},{"location":"projekte/lichtrahmen/#aussparung-fur-zuleitung-led-streifen","title":"Aussparung f\u00fcr Zuleitung LED-Streifen","text":"<p>Sofern gew\u00fcnscht, kann auf dem Aluprofil der Unterseite eine Kerbe ausges\u00e4gt werden um die Zuleitung des LED-Streifens dort durchzuf\u00fchren. Auch hier Entgraten um scharfe Kanten zu vermeiden.</p>"},{"location":"projekte/lichtrahmen/#led-streifen-zuschneiden","title":"LED-Streifen zuschneiden","text":"<p>Nun werden die einzelnen LED-Streifen aus dem 5m LED-Strip zugeschnitten. Der LED-Streifen hat Schnittmarkierungen mit L\u00f6tpunkten um diese sp\u00e4ter wieder zu verbinden. </p> <p>Schwierig sind die Ecken des Lichtrahmens. Gerade die Zuleitung des LED-Streifens nimmt etwas Platz am Anfang weg. Basierend auf dessen wurden die Abst\u00e4nde der ersten LED zu den Ecken gleich gew\u00e4hlt. Je weiter der Abstand zu den Ecken, desto dunkler wird sp\u00e4ter die Ecke auch ausgeleuchtet. Dies also beachten.</p>"},{"location":"projekte/lichtrahmen/#led-streifen-einkleben-und-verbinden","title":"LED-Streifen einkleben und verbinden","text":"<p>Anschlie\u00dfend werden die einzelnen LED-Streifen in die einzelnen Alu-Profile eingeklebt. </p>  <p>Tip</p> <p>An den Enden der einzuklebenden LED-Streifen vorher ein St\u00fcck Isolierband auf das Aluprofil einkleben um sp\u00e4ter beim L\u00f6ten evtl. Verbindungen mit dem Aluminium zu vermeiden</p>  <p>Die Streifen auf der kurzen und langen Seite sollten jeweils die gleiche Anzahl von LEDs haben um eine gleichm\u00e4\u00dfige Ausleuchtung zu erhalten. Anschlie\u00dfend die LED-Streifen der einzelnen Seiten \u00fcber Eck miteinander verl\u00f6ten mit kurzen Kabeln/Litzen. Die Kabel werden unter die 3D-gedruckten L-Verbinder verlegt. </p>  <p>Tip</p> <p>Tip f\u00fcr nicht-L\u00f6tspezialisten: opfert beim zuschneiden der LED-Streifen lieber eine LED um daf\u00fcr einen kompletten L\u00f6tpunkt an der Schnittkante zu erhalten. Schneidet man die LEDs genau in der Mitte der L\u00f6tpunkte/Schnittkante ist dies schon sehr knapp f\u00fcr eine weitere Anbindung. </p>   <p>Tip</p> <p>Kabel/Litze vorher mit L\u00f6tzinn benetzen und anschlie\u00dfend auch erst die L\u00f6tpunkte mit L\u00f6tzinn versehen damit es einen sch\u00f6nen Tropfen auf dem L\u00f6tpunkt ergibt. Dann ist das zusammenl\u00f6ten der Kabel auf L\u00f6tpunkt sehr einfach und sauber.</p>   <p>Tip</p> <p>Sollten durch nicht 100%ig saubere und glatte 45\u00b0-Winkel beim Zusammenstecken der Ecken die Profile nicht ganz b\u00fcndig passen und die darunter liegenden Kabel durch einen Spalt sichtbar sein, diese am besten mit schwarzem Isolierband umwickenln um dies zu kaschieren.</p>  <p>Anschlie\u00dfend ist der Lichtrahmen dann erstmal fertig zusammengebaut und kann auch nicht mehr ohne L\u00f6sen der L\u00f6tpunkte auseinandergenommen werden.</p>"},{"location":"projekte/lichtrahmen/#diffusor-einsetzen","title":"Diffusor einsetzen","text":"<p>Die Diffusorprofile einfach auf die richtige L\u00e4nge zuschneiden und einklipsen. </p>"},{"location":"projekte/lichtrahmen/#verkabelung","title":"Verkabelung","text":"<p>Falls nicht sowieso schon geschehen, sollte die Verkbabelung nun f\u00fcr das probeweise Ausprobieren erfolgen.</p> <p>Der ESP32 sowie der Leuchtrahmen werden von dem 5V Netzteil versorgt. Das ESP32-DevBoard hat einen 5V Pin der mit dem Netzteil verbunden wird. GND ebenso. Das gleiche gilt f\u00fcr die LEDs: 5V an rot, Masse auf Schwarz. Die Steuerleitung f\u00fcr die LEDs muss an GPIO2 im Default. Wenn unklar bei WLED in den Docs suchen bzw. ein Pinout des ESP-Boards suchen.</p>  <p>Attention</p> <p>Falls der ESP von einer anderen Stromquelle gespeist wird als der LED-Streifen, z.B. von einem USB-Netzteil, so muss es ein einheitliches GND geben. D.h. beide GNDs m\u00fcssen verbunden sein, sonst kommt es nur zu wild blinkendem LED-Pixelsalat da es dann unterschiedliche Null-Potentiale bei ESP und LED-Streifen gibt.</p>"},{"location":"projekte/lichtrahmen/#abstand-zur-wand-bestimmen-und-abstandshalter-zuschneiden","title":"Abstand zur Wand bestimmen und Abstandshalter zuschneiden","text":"<p>Nun gilt es den richtigen Abstand zur Wand zu bestimmen, so dass ein sch\u00f6n diffuses Licht erzeugt wird. Einzelne LEDs sollten nicht mehr erkennbar sein. Hier waren 5 cm der gew\u00e4hlte Abstand. Dazu werden dann die Acryl-Rundst\u00e4be in die entsprechende L\u00e4nge zuges\u00e4gt. An den Ecken wurden diese mit Hei\u00dfkleber aufgeklebt.</p>"},{"location":"projekte/lichtrahmen/#aufhangung","title":"Aufh\u00e4ngung","text":"<p>In die zwei L\u00f6cher des oberen Alu-Profiles wird nun ein Nylon-Faden (1 mm) befestigt. So kann der Rahmen wie ein Bild aufgeh\u00e4ngt werden.</p> <p>Resultat:</p>"},{"location":"projekte/lichtrahmen/#konfiguration-in-wled","title":"Konfiguration in WLED","text":"<p>Tip</p> <p>Die einzelnen Seiten des Rahmens als Segmente anlegen und den Mirror-Effect aktivieren. Das ergibt sehr sch\u00f6ne symmetrische Effekte.</p>"},{"location":"projekte/lichtrahmen/#einbindung-in-home-assistant","title":"Einbindung in Home Assistant","text":"<p>In der Regel wird die WLED-Instanz, sofern in gleichen Netzwerk,  automatisch von Home Assistant erkannt und kann dort leicht integriert werden. Anschlie\u00dfend stehen alle M\u00f6glichkeiten offen um dar\u00fcber den Lichtrahmen zu steuern, Automatisierungen zu erstellen und Einstellungen zu \u00e4ndern.</p>"},{"location":"projekte/lichtrahmen/#erkenntnisse","title":"Erkenntnisse","text":"<ul> <li>Sauber geschnittene 45\u00b0 Winkel sind nur mit einer sehr guten Gehrungss\u00e4ge m\u00f6glich</li> <li>beim S\u00e4gen der Elemente am besten noch einmal mehr pr\u00fcfen ob der Winkel in der richtigen Richtung ges\u00e4gt wird </li> <li>Beim zuschneiden der LED-Streifen: am besten eine LED opfern um einen vollst\u00e4ndigen L\u00f6tpunkt zu bekommen. Schneidet man in der H\u00e4lfte des L\u00f6tpunktes sind die L\u00f6tpunkte schon sehr schmal (f\u00fcr meine L\u00f6tkenntnisse)</li> </ul>"},{"location":"projekte/lichtrahmen/#offener-punkt","title":"Offener Punkt","text":"<p>Die Zuleitung zum Lichtrahmen muss noch aufgeh\u00fcbscht werden. Dazu soll ein Kabel m\u00f6glichst einheitlich zum Lichtrahmen gef\u00fchrt werden und der ESP bzw Netzteil noch in einem Geh\u00e4use unsichtbar am Boden verstaut werden.</p>"},{"location":"projekte/pixelclock/","title":"PixelClock, smarte LED Matrix","text":"<p>Die PixelClock zeigt im Standard die Uhrzeit und Datum an (per NTP bezogen). Per MQTT bzw. API Schnittstellen k\u00f6nnen aber auch sogenannte Screens mit Text und Icons angezeigt werden. Ein Helligkeitssensor regelt die Helligkeit der Anzeige je nach Lichtst\u00e4rke im Raum. Basierend ist diese Anzeige auf dem Projekt PixelIT, das Geh\u00e4use ist mit dem 3D-Drucker gedruckt.</p> <p>  </p>"},{"location":"projekte/pixelclock/#benotigtes-material","title":"Ben\u00f6tigtes Material","text":"<ul> <li>3D-Drucker f\u00fcr das Geh\u00e4use</li> <li>Wemos D1 Mini</li> <li>WS2812 8x32 Matrix</li> <li>(optional) Helligkeitssensor, z.B. LDR GL5516</li> <li>Ein 1000\u00b5F Kondensator f\u00fcr Stabilisierung (geht evtl. auch ohne)</li> <li>weiteres Infos zur Hardware und Software beim Projekt:<ul> <li>bei Github</li> <li>Doku Seite</li> </ul> </li> <li>Geh\u00e4use zum Drucken:<ul> <li>Geh\u00e4use bei Thingiverse</li> <li>anderes Geh\u00e4use:   Dieses ist das auf den Fotos sichtbare Geh\u00e4use. Nachteil beim Geh\u00e4use ist, dass der Stromanschlu\u00df auf der Unterseite ist. Ich habe die STL-Dateien ge\u00e4ndert, so dass der Stromanschlu\u00df seitlich wie auf den Fotos ist.</li> <li>Als Diffusor nutze ich einfach ein Blatt Papier</li> <li>F\u00fcr die T\u00f6nung nutze ich eine Acrylglasplatte, z.B. hier</li> </ul> </li> </ul>"},{"location":"projekte/pixelclock/#ansteuerung-uber-home-assistant","title":"Ansteuerung \u00fcber Home Assistant","text":"<p>Das Pixel It Projekt nutzt Node-Red f\u00fcr die Anzeige von Wetterdaten/sonstigen Zust\u00e4nden aus einer Heimautomatisierungsl\u00f6sung wie Home Assistant. Da dies bisher nicht im Einsatz ist, wurde die Ansteuerung \u00fcber native Services/Automatisierungen in Home Assistant realisiert.  D.h. zuerst wird ein REST-Call definiert (was soll auf der Uhr angezeigt werden) und dann per Automatisierung wird dieser Service dann getriggert (z.B. alle Minute die Temperatur anzeigen).</p>"},{"location":"projekte/pixelclock/#definiton-der-services","title":"Definiton der Services","text":"<p>Die Services definieren des REST-API-Call zur Pixel IT Clock, z.B. zeige die Au\u00dfentemperatur mit Icon f\u00fcr Thermomether an. Diese Services k\u00f6nnen dann per Automatisierung getriggert werden.</p> <p>In der Pixel IT Webobefl\u00e4che kann man die API-Calls erst testen, auch die Icons k\u00f6nnen dort sehr einfach ausgew\u00e4hlt werden. Die Doku zur API befindet sich hier</p> <pre><code>rest_command:\n  pixel_aussentemperatur:\n      url: http://&lt;ip der uhr&gt;/api/screen\n      method: POST\n      headers:\n        accept: \"application/json, text/html\"\n      payload: '{\n              \"switchAnimation\": {\n          \"aktiv\": true,\n          \"animation\": \"fade\"\n      },\n      \"bitmap\": {\n          \"data\": \n              [0,65535,65535,65535,0,65535,65535,0,0,65535,0,65535,0,65535,0,0,0,65535,63488,65535,0,65535,65535,0,0,65535,63488,65535,0,0,0,0,0,65535,63488,65535,0,0,0,0,65535,63488,63488,63488,65535,0,0,0,65535,63488,63488,63488,65535,0,0,0,0,65535,65535,65535,0,0,0,0],\n          \"position\": {\n              \"x\": 0,\n              \"y\": 0\n          },\n          \"size\": {\n              \"width\": 8,\n              \"height\": 8\n          }\n      },\n          \"text\": {\n          \"textString\": \"{{ states.sensor.aussentemperatur.state | round(1) }}\u00b0\",\n          \"bigFont\": false,\n          \"scrollText\": false,\n          \"scrollTextDelay\": 0,\n          \"centerText\": true,\n          \"position\": {\n              \"x\": 7,\n              \"y\": 1\n          },\n          \"hexColor\": \"#ffffff\"\n      }\n      }'\n      content_type:  'application/json; charset=utf-8'\n</code></pre>"},{"location":"projekte/pixelclock/#automatisierung","title":"Automatisierung","text":"<p>Hier wird jede Minute der zuvor erstellte Service getriggert um die Temperatur auf der Uhr anzuzeigen.</p> <pre><code>alias: Pixel IT Aussentemperatur anzeigen\ndescription: ''\ntrigger:\n  - platform: time_pattern\n    minutes: /1\ncondition: []\naction:\n  - service: rest_command.pixel_aussentemperatur\nmode: single\n</code></pre>"},{"location":"projekte/pixelclock/#anwendungsbeispiele","title":"Anwendungsbeispiele","text":"<ul> <li>Waschmaschine fertig </li> <li>Trockner fertig</li> <li>Nachricht bei T\u00fcrklingeln</li> </ul>"},{"location":"projekte/sidewinder-x1-led-2/","title":"Artillery Sidewinder X1 LED Statusbeleuchtung","text":"<p>Damit beim 3D-Druck auch besser zu sehen ist was gedruckt wird, macht eine Beleuchtung der Druckplatte Sinn. Ist fast schon ein klassisches Upgrade f\u00fcr jeden 3D-Drucker.</p> <p>Hier wird ein Artillery Sidewinder X1 mit einem SK6812-LED-Streifen (insgesamt 18 LEDs) versehen. Strom bekommt der Streifen vom internen 24V-Netzteil des Sidewinders \u00fcber einen Step-Down Converter der aus den 24V passende 5V macht. Dieser ist auch im Geh\u00e4use des Sidewinders untergebracht, sodass hier nicht viel von au\u00dfen zu sehen ist. Die Kabelf\u00fchrung zum LED-Streifen geschieht \u00fcber die rechte Z-Achse. Dort hinein wird das Kabel gelegt und mit einer gedruckten Abdeckung verblendet. Die Ansteuerung des LED-Streifens zur Anzeige von Druckstatus/Fortschritt erfolgt \u00fcber einen Raspberry Pi 4 mit Octoprint und dem Plugin \"WS281x LED Status\".</p>  <p>Achtung!</p> <p>Im Geh\u00e4use sind 230V Netzspannung anliegend. Wer hier keine Ahnung hat, besser die Finger davon lassen. Auf jeden Fall den Drucker vom Stromnetz trennen!</p>"},{"location":"projekte/sidewinder-x1-led-2/#benotigtes-werkzeug","title":"ben\u00f6tigtes Werkzeug","text":"<ul> <li>Schraubenzieher</li> <li>L\u00f6tkolben</li> <li>Schrumpfschlauch</li> <li>Aderendh\u00fclsen und Wago-Klemmen sind hilfreich bzw. empfohlen</li> <li>Multimeter</li> </ul>"},{"location":"projekte/sidewinder-x1-led-2/#benotigte-hardwareteile-zum-drucken","title":"ben\u00f6tigte Hardware/Teile zum Drucken","text":"<ul> <li>WS2812/SK6812 LED-Streifen</li> <li>Step-Down Buck Converter, z.B. LM2596</li> <li>Kabel f\u00fcr Anschlu\u00df LED-Streifen + Step Down Converter</li> <li>Abdeckschienen f\u00fcr das Kabel zum LED-Streifen zu verstecken gibt es bei Thingiverse zum drucken</li> <li>Geh\u00e4use f\u00fcr den Step-Down Converter bei Thingiverse Thingiverse</li> <li>f\u00fcr eine Steckverbindung zw. LED-Streifen und den im Sidewinder befindlichen Teilen benutze ich noch 3-Polige Schnellverbinder f\u00fcr LED-Streifen</li> </ul>"},{"location":"projekte/sidewinder-x1-led-2/#plugin-fur-octoprint","title":"Plugin f\u00fcr Octoprint","text":"<ul> <li>OctoPrint WS281x LED Status</li> </ul>"},{"location":"projekte/sidewinder-x1-led-2/#aufbau","title":"Aufbau","text":""},{"location":"projekte/sidewinder-x1-led-2/#sidewinder-offnen-um-an-die-innereien-zu-kommen","title":"Sidewinder \u00f6ffnen um an die Innereien zu kommen","text":"<ul> <li>Stecker aus dem Netzteil!</li> <li>Die kleinen Schrauben an der Bodenplatte l\u00f6sen, Achtung die Garantie erlischt ab dem Moment!</li> <li>Beim Abnehmen der Bodenplatte muss noch der L\u00fcfter vom Mainboard abgezogen werden </li> </ul>"},{"location":"projekte/sidewinder-x1-led-2/#buck-converter-an-netzteil-des-sidewinders-anschlieen","title":"Buck-Converter an Netzteil des Sidewinders anschlie\u00dfen","text":"<ul> <li>Achtung: 230V am Netzteil! Stecker raus!</li> <li>Am Netzteil sind noch jeweils 1 Klemme f\u00fcr V+ und V- (24V) frei. Hier kann der Spannungswandler angeschlossen werden. Vorher muss dieser nat\u00fcrlich entsprechend mit Kabeln angel\u00f6tet werden</li> <li>Der Converter ist hier im Foto in einem kleinen Geh\u00e4use drin  </li> </ul>"},{"location":"projekte/sidewinder-x1-led-2/#einstellen-der-ausgangsspannung","title":"Einstellen der Ausgangsspannung","text":"<ul> <li>Der Buck-Converter hat eine kleine Schraube an der die Ausgangsspannung eingestellt werden kann. Diese mit einem Multimeter auf ca. 5V f\u00fcr den LED-Streifen einstellen</li> <li>Achtung: Hierzu m\u00fcsst ihr das Netzteil unter Strom setzen. Achtung: keine Teile anfassen!</li> </ul>"},{"location":"projekte/sidewinder-x1-led-2/#verkabelung","title":"Verkabelung","text":"<p>Der LED-Streifen wird mit einem 3-poligen Stecker auf eine 3-Polige Buchse an der rechten Z-Achse angeschlossen. Vom Raspberry Pi f\u00fchren noch 2 Jumper Kabel von den GPIOs ins Innere um ein gemeinsames GND f\u00fcr den LED-Streifen zu haben und f\u00fcr die Steuerleitung der LEDs.  Im Sidewinder sind die einzelnen Kabel f\u00fcr V+, V- und D (Steuerung) dann per Wago Klemmen zusammengeschaltet.</p>"},{"location":"projekte/sidewinder-x1-led-2/#einstellen-des-octoprint-plugins","title":"Einstellen des Octoprint Plugins","text":"<p>Dazu gibt es die Doku beim Plugin. Hier wird auch noch die Verkabelung genauer erl\u00e4utert: Plugin Doku</p>"},{"location":"projekte/solvis-heizung/","title":"Solvis Heizung via Modbus auslesen und steuern","text":"<p>Eine Solvis Heizungsanlage, hier SolvisMax, l\u00e4sst sich mit Hilfe der optional erh\u00e4ltlichen Solvis Remote fernsteuern. Die Solvis Remote bildet im Prinzip das Touchdisplay der Heizung 1:1 via Browser nach. Zus\u00e4tzlich gibt es Graphen \u00fcber den Temperaturverlauf der einzelnen Sensoren des Schichtenspeichers und die M\u00f6glichkeit, sich ein Anlagenschema darzustellen. </p> <p>F\u00fcr eine Integration ein ein bestehendes Smart Home System, hier Home Assistant, bietet die Solvis Remote zus\u00e4tzlich die M\u00f6glichkeit die Heizung mittels Modbus-TCP Protokoll lokal auslesen und, falls gew\u00fcnscht, auch steuern zu k\u00f6nnen. </p> <p>Vorbildlich ist die Bereitstellung aller Dokumentationen inkl. Modbus Register von Solvis auf deren Webseite. </p>"},{"location":"projekte/solvis-heizung/#benotigte-hardware","title":"ben\u00f6tigte Hardware","text":"<ul> <li>Solvis Heizung, hier SolvisMax 7</li> <li>Solvis Control 2 (SC2)</li> <li>Solvis Remote zur Anbindung ans Netzwerk und Bereitstellung des Modbus-TCP Protokolls</li> </ul>"},{"location":"projekte/solvis-heizung/#home-assistant-ubersicht","title":"Home Assistant \u00dcbersicht","text":"<p>In Home Assistant wurde die Ansicht der Anlage auf der Solvis Remote nachgebildet </p> <p>Zus\u00e4tzlich gibt es eine Detail-Ansicht der einzelnen Sensoren und Stati. </p> <p>Klick auf die einzelnen Sensoren bringen die Historie des Sensors bzw. die Auswahlm\u00f6glichkeiten zur Steuerung, z.b. den HKR1-Betriebsmodus zu \u00e4ndern</p>"},{"location":"projekte/solvis-heizung/#langzeitauswertung-mit-grafanainfluxdb","title":"Langzeitauswertung mit Grafana/InfluxDB","text":"<p>F\u00fcr Langzeitstatistiken werden die Daten von Home Assistant in einer InfluxDB Datenbank gespeichert und mittels Grafana visualisiert. </p> <p>F\u00fcr die monatliche Auswertung der Brennerstarts und Laufzeit des Brenners werden mit folgenden Queries die Daten ermittelt:</p> <pre><code>SELECT spread(\"value\") FROM \"Starts\" WHERE (\"entity_id\" = 'brennerstarts') AND time &gt; now()  - 365d GROUP BY time(30d) fill(null)\n\nSELECT spread(\"value\") FROM \"h\" WHERE (\"entity_id\" = 'laufzeit_brenner') AND time &gt; now() - 365d  GROUP BY time(30d) fill(null)\n</code></pre>"},{"location":"projekte/solvis-heizung/#aktivierung-modbus-protokoll","title":"Aktivierung Modbus Protokoll","text":"<p>Zur Aktivierung von Modbus TCP muss in das Installateurmen\u00fc gewechselt werden. Den zugeh\u00f6rigen Code werde ich nicht ver\u00f6ffentlichen. Bitte mit dem Installateur der Heizung Kontakt aufnehmen.  Im Men\u00fcpunkt <code>Sonstiges --&gt; Remote</code> ausw\u00e4hlen und dort dann den Modus f\u00fcr <code>Modbus TCP</code> auf <code>lesen</code> oder auch <code>senden</code> (schreiben) einstellen. Sollten die Einstellungen korrekt sein sollte unter der IP-Addresse der Solvis-Remote auf Port TCP/502 ein Connect m\u00f6glich sein.</p>"},{"location":"projekte/solvis-heizung/#auszug-configurationyaml","title":"Auszug configuration.yaml","text":"<p>Nachfolgend ein Auszug der configuration.yaml von Home Assistant mit den wichtigsten Sensoren und Templates</p> <pre><code>modbus:\n  - name: SolvisRemote\n    type: tcp\n    host: &lt;ip der solvis remote&gt;\n    port: 502\n\n    sensors:\n      - name: Warmwasserpuffer\n        unit_of_measurement: \u00b0C\n        scale: 0.1\n        slave: 1\n        precision: 2\n        input_type: input\n        address: 33024\n        scan_interval: 30\n\n      - name: Warmwassertemperatur\n        unit_of_measurement: \u00b0C\n        scale: 0.1\n        slave: 1\n        precision: 2\n        input_type: input\n        address: 33025\n        scan_interval: 30\n\n      - name: Speicherreferenztemperatur\n        unit_of_measurement: \u00b0C\n        scale: 0.1\n        slave: 1\n        precision: 2\n        input_type: input\n        address: 33026\n        scan_interval: 30\n\n      - name: Heizungspuffertemperatur oben\n        unit_of_measurement: \u00b0C\n        scale: 0.1\n        slave: 1\n        precision: 2\n        input_type: input\n        address: 33027\n        scan_interval: 30\n\n      - name: Aussentemperatur\n        unit_of_measurement: \u00b0C\n        scale: 0.1\n        slave: 1\n        precision: 2\n        input_type: input\n        address: 33033\n        scan_interval: 30\n\n      - name: Heizungspuffertemperatur unten\n        unit_of_measurement: \u00b0C\n        scale: 0.1\n        slave: 1\n        precision: 2\n        input_type: input\n        address: 33032\n        scan_interval: 30\n\n      - name: Zirkulationsdurchfluss\n        unit_of_measurement: \u00b0C\n        scale: 0.1\n        slave: 1\n        precision: 2\n        input_type: input\n        address: 33034\n        scan_interval: 30\n\n      - name: Vorlauftemperatur\n        unit_of_measurement: \u00b0C\n        scale: 0.1\n        slave: 1\n        precision: 2\n        input_type: input\n        address: 33035\n        scan_interval: 30\n\n      - name: Kaltwassertemperatur\n        unit_of_measurement: \u00b0C\n        scale: 0.1\n        slave: 1\n        precision: 2\n        input_type: input\n        address: 33038\n        scan_interval: 30\n\n      - name: Durchfluss Warmwasserzirkualation\n        unit_of_measurement: l/min\n        slave: 1\n        precision: 2\n        scale: 0.1\n        input_type: input\n        address: 33041\n        scan_interval: 30\n\n      - name: Laufzeit Brenner\n        unit_of_measurement: h\n        slave: 1\n        precision: 0\n        input_type: input\n        address: 33536\n        scan_interval: 30\n\n      - name: Brennerstarts\n        unit_of_measurement: Starts \n        slave: 1\n        precision: 0\n        input_type: input\n        address: 33537\n        scan_interval: 30\n\n      - name: Brennerleistung\n        unit_of_measurement: kW\n        scale: 0.1\n        slave: 1\n        precision: 2\n        input_type: input\n        address: 33539\n        scan_interval: 30\n\n      - name: Ionisationsstrom\n        unit_of_measurement: mA \n        slave: 1\n        scale: 0.1\n        precision: 1\n        input_type: input\n        address: 33540\n        scan_interval: 30\n\n      - name: A01.Pumpe Zirkulation\n        slave: 1\n        unit_of_measurement: V\n        scale: 0.01\n        precision: 0\n        input_type: input\n        address: 33280\n        scan_interval: 30\n\n      - name: A02.Pumpe Warmwasser\n        slave: 1\n        unit_of_measurement: V\n        scale: 0.01\n        precision: 0\n        input_type: input\n        address: 33281\n        scan_interval: 30\n\n      - name: A03.Pumpe HK1\n        slave: 1\n        unit_of_measurement: V\n        scale: 0.01\n        precision: 0\n        input_type: input\n        address: 33282\n        scan_interval: 30\n\n      - name: A05.Pumpe Zirkulation\n        slave: 1\n        unit_of_measurement: V\n        scale: 0.01\n        precision: 0\n        input_type: input\n        address: 33284\n        scan_interval: 30\n\n      - name: A12.Brennerstatus\n        slave: 1\n        unit_of_measurement: V\n        scale: 0.01\n        precision: 0\n        input_type: input\n        address: 33291\n        scan_interval: 30\n\n      - name: WW Nachheizung 2322\n        slave: 1\n        #unit_of_measurement: V\n        #scale: 0.01\n        #precision: 0\n        input_type: holding\n        address: 2322\n        scan_interval: 30\n\n      - name: HKR1 Betriebsart\n        slave: 1\n        input_type: holding\n        address: 2818\n        scan_interval: 30  \n\n\n# ab hier 300 Sekunden Poll Interval    \n\n      - name: HKR1 Absenktemperatur Nacht\n        unit_of_measurement: \u00b0C\n        slave: 1\n        input_type: holding\n        address: 2821\n        scan_interval: 300\n\n      - name: HKR1 Solltemperatur Tag\n        unit_of_measurement: \u00b0C\n        slave: 1\n        input_type: holding\n        address: 2820\n        scan_interval: 300\n\n      - name: DigIn Stoerungen\n        slave: 1\n        input_type: input\n        address: 33045\n        scan_interval: 300\n\n      - name: WW Solltemperatur\n        unit_of_measurement: \u00b0C\n        slave: 1\n        input_type: holding\n        address: 2305\n        scan_interval: 300\n\n      - name: VersionSC2\n        slave: 1\n        scale: 0.01\n        precision: 2\n        input_type: input\n        address: 32770\n        scan_interval: 300\n\n      - name: VersionNBG\n        slave: 1\n        scale: 0.01\n        input_type: input\n        address: 32771\n        scan_interval: 300\n\n      - name: ZirkulationBetriebsart\n        slave: 1\n        input_type: input\n        address: 2049\n        scan_interval: 300\n\n\n      - name: Raumtemperatur_HKR1\n        unit_of_measurement: \u00b0C\n        scale: 0.1\n        slave: 1\n        input_type: holding\n        address: 34304\n        scan_interval: 300\n\n\n\n\nsensor:     \n  - platform: template\n    sensors:\n      ww_zirkulationsart:\n        friendly_name: \"WW Zirkulation Betriebsart\"\n        #entity_id: sensor.zirkulationbetriebsart\n        value_template: &gt;-\n            {% if states('sensor.zirkulationbetriebsart') == '1' %}\n              Aus\n            {% elif states('sensor.zirkulationbetriebsart') == '2' %}\n              Puls\n            {% elif states('sensor.zirkulationbetriebsart') == '3' %}\n              Temp\n            {% elif states('sensor.zirkulationbetriebsart') == '4' %}\n              Warten\n            {% else %}\n              unbekannt\n            {% endif %}\n\n\n      hkr1betriebsart:\n        friendly_name: \"Heizkreislauf Betriebsart\"\n        #entity_id: sensor.hkr1_betriebsart\n        value_template: \"{%if states.sensor.hkr1_betriebsart.state == '1' %}Aus{% elif states.sensor.hkr1_betriebsart.state == '2' %}Automatik{% elif states.sensor.hkr1_betriebsart.state == '3' %}Tagbetrieb{% elif states.sensor.hkr1_betriebsart.state == '4' %}Absenkbetrieb{% elif states.sensor.hkr1_betriebsart.state == '5' %}Standby{% elif states.sensor.hkr1_betriebsart.state == '6' %}Eco{% elif states.sensor.hkr1_betriebsart.state == '7' %}Urlaub{% elif states.sensor.hkr1_betriebsart.state == '8' %}WW Vorang{% elif states.sensor.zirkulationbetriebsart.state == '9' %}Frostschutz{% elif states.sensor.zirkulationbetriebsart.state == '10' %}Pumpenschutz{% elif states.sensor.hkr1_betriebsart.state == '11' %}Estrich{% endif %}\"\n</code></pre>"},{"location":"projekte/solvis-heizung/#raumtemperatur-per-modbus-register-statt-raumbedienelement","title":"Raumtemperatur per Modbus-Register statt Raumbedienelement","text":"<p>Normalerweise wird \u00fcber das (optionale) Raumbedienelement die Raumtemperatur an die Solvis Control2 (SC2) gemeldet. Dadurch kann die Heizung die Regelung an die erreichte Raumtemperatur anpassen.</p> <p>Da im Haus keine einfache Verkabelung des Raumbedienelements m\u00f6glich war, es aber ein Modbus Register 34304 (Raumtemperatur 1) gibt, war die Idee geboren die Raumtemperatur \u00fcber die in Home Assistant vorhandenen Zigbee Temperatursensoren per Modbus in das Register zu schreiben, was zun\u00e4chst fehlschlug, trotz aktiviertem schreibenden Modbus-Zugriff. Allerdings war zu dem Zeitpunkt die SC2 noch nicht f\u00fcr ein Raumbedienelement eingerichtet.</p> <p>Nach Kontaktaufnahme mit Solvis bekam ich die Infos dir mir fehlten. Vielen Dank hierf\u00fcr an Wolf Walter</p>"},{"location":"projekte/solvis-heizung/#voraussetzungen","title":"Voraussetzungen","text":"<ul> <li>Solvis Control muss mit Raumbedienelement f\u00fcr den Heizkreislauf konfiguriert sein (auch wenn kein Raumbedienelement per Kabel angeschlossen wird)</li> <li>daf\u00fcr ist ein Zur\u00fccksetzen der Solvis Control auf Werkseinstellung n\u00f6tig, da in der Initialisierung das Raumbedienelement zum Heizkreislauf zugeordnet wird</li> <li>Anschlie\u00dfend muss im Installateur-Men\u00fc unter <code>Sonstiges --&gt; Remote --&gt; Seite 3 --&gt; Raumf\u00fchler HK1</code> auf <code>Modbus</code> umgestellt werden </li> <li>und der Modbus-Modus muss auf <code>senden</code> was dem schreibenden Zugriff entspricht umgestellt werden, falls noch nicht geschehen</li> </ul>  <p>Hinweis</p> <p>Die Temperatur muss ca. alle 60 Sekunden per Modbus in das Register geschrieben werden, sonst \"verschwindet\" die Temperatur in der Anzeige und zeigt nur noch \"--\"</p>"},{"location":"projekte/solvis-heizung/#zyklisches-setzen-der-raumtemperatur-in-home-assistant","title":"zyklisches setzen der Raumtemperatur in Home Assistant","text":"<p>Eine Automatisierung schreibt den Sensorwert eines Zigbee Temperatursensors alle 30 Sekunden in das Modbus Register.</p> <p>Dazu muss der Wert des Sensors konvertiert werden, da das Modbus-Register den Wert in 0.1\u00b0C skaliert erwartet. Zudem muss der Wert in ein <code>int</code> gewandelt werden da der <code>modbus.write_register</code>-Service ein <code>int</code> erwartet.</p>"},{"location":"projekte/solvis-heizung/#automatisierung","title":"Automatisierung","text":"<pre><code>  - alias: Heizung Raumtemperatur per Modbus aktualisieren\n    trigger:\n      platform: time_pattern\n      seconds: \"/30\"\n    action:\n    - service: modbus.write_register\n      data_template:\n        address: 34304\n        hub: SolvisRemote\n        unit: 1\n        value: \"{{ (states('sensor.temperatur_wohnzimmer') | float * 10) | int }}\"\n</code></pre>"},{"location":"projekte/solvis-heizung/#raumtemperaturanzeige-in-der-sc2","title":"Raumtemperaturanzeige in der SC2","text":"<p>Bei erfolgreichem setzen der Temperatur erscheint diese in der Solvis Control </p>"},{"location":"projekte/solvis-heizung/#stundenweises-umschalten-von-automatik-auf-standby-betrieb","title":"Stundenweises umschalten von Automatik auf Standby-Betrieb","text":"<p>Gerade in der \u00dcbergangszeit kann es vorkommen, dass an sonnigen Tagen trotz noch k\u00fchler Au\u00dfentemperatur es in den Zimmern durch die Sonneneinstrahlung bereits warm ist. Die Heizung aber noch wegen der k\u00fchlen Au\u00dfentemperatur weiterhin l\u00e4uft bis auch die Au\u00dfentemperatur entsprechend sp\u00e4ter am Tag steigt.</p> <p>Hier w\u00e4re ein Nutzungsszenario f\u00fcr folgende Automatisierung: Schalte den Heizkreis auf Standby-Modus f\u00fcr x-Stunden (z.B. bis Abends).</p>  <p>Realisiert ist dies \u00fcber einen <code>timer</code> in Home Assistant, dessen Zeitwert (Stunden) per <code>input_number</code> gesetzt wird (Schieberegler im Frontend). \u00dcber ein <code>input_boolean</code> (Ein-/Ausschalter im Frontend) wird dann eine Automatisierung ausgef\u00fchrt, die den Timer startet (<code>service: timer.start</code>) und das Modbus Register 2818 auf den Wert <code>5</code> (HKR1 Standbymodus) schreibt.</p> <p>Wenn der Timer abgelaufen ist, startet eine zweite Automatisierung (getriggert durch <code>event_type: timer.finished</code>) die dann den Ein-/Ausschalter wieder auf \"Aus\" setzt.</p> <p>Durch das setzen des Ein-Ausschalters auf \"Aus\" durch diese Automatisierung wird wiederum eine weitere Automatisierung getriggert die dann zum Einen das Modbus-Register 2818 wieder auf <code>2</code> (Automatik) setzt, also den Heizkreis wieder in den normalen Automatikmodus versetzt. Der zweite Anwendungsfall ist das manuelle Umschalten des Ein-/Ausschalters in der Weboberfl\u00e4che auf \"Aus\" um wieder manuell auf \"Automatik\" umzuschalten. Auch hier triggert diese Automatisierung. </p>"},{"location":"projekte/solvis-heizung/#konfiguration-home-assistant","title":"Konfiguration Home Assistant","text":"<pre><code># Eingabefelder \ninput_number:\n  delayheizungstandby:\n    name: Stunden auf Standby\n    initial: 5\n    min: 1\n    max: 8\n    step: 1\n    icon: mdi:timer\n\ninput_boolean:\n  heizungstandbyon:\n    name: Heizung stundenweise auf Standby\n    initial: off\n\n\n# Timer for setting heating on standby for x hours\ntimer:\n  heizungaufstandbyfor:\n    name: Noch auf Standby f\u00fcr\n\n\nautomation:\n\n  - alias: Heizung auf Standby Start\n    trigger:\n      platform: state\n      entity_id: input_boolean.heizungstandbyon\n      to: 'on'\n    action:\n    -  service: timer.start\n       entity_id: timer.heizungaufstandbyfor\n       data_template:\n         duration: \"{{ states('input_number.delayheizungstandby') | int * 60 * 60 }}\"\n    - service: modbus.write_register\n      data:\n        address: 2818\n        hub: SolvisRemote\n        unit: 1\n        value: 5    \n\n\n  - alias: Heizung Standby To Automatic\n    trigger:\n      platform: state\n      entity_id: input_boolean.heizungstandbyon\n      to: 'off'\n    action:\n    - service: timer.cancel\n      entity_id: timer.heizungaufstandbyfor\n    - service: modbus.write_register\n      data:\n        address: 2818\n        hub: SolvisRemote\n        unit: 1\n        value: 2\n\n\n  - alias: Heizung Standby Timer Finished\n    trigger:\n      platform: event\n      event_type: timer.finished\n      event_data:\n        entity_id: timer.heizungaufstandbyfor\n    action:\n    - service: input_boolean.turn_off\n      data:\n        entity_id: input_boolean.heizungstandbyon\n</code></pre>"},{"location":"projekte/solvis-heizung/#automatischer-absenkbetrieb-wenn-niemand-zu-hause","title":"Automatischer Absenkbetrieb wenn niemand zu Hause","text":"<p>Weitere Einsparm\u00f6glichkeiten f\u00fcr Gas ergeben sich, wenn man den Heizkreislauf bei Abwesenheit aller Personen auf den Absenkbetrieb \u00e4ndert.</p> <p>\u00dcber Geofencing wird erkannt, welche Personen sich zu Hause aufhalten. Nun kann man leicht eine Automatisierung bauen, die bei Abwesenheit aller Personen den Heizkreislauf in den Absenkbetrieb versetzt. Sobald eine Person zu Hause ist, soll aber der Automatikmodus wieder aktiviert werden. Ausnahme: vorher wurde manuell eine andere Betriebsart eingestellt (Standby oder Urlaub o.\u00e4.)</p>"},{"location":"projekte/solvis-heizung/#voraussetzungen-home-assistant","title":"Voraussetzungen Home Assistant","text":"<ul> <li>Die Home Assistant Instanz muss \u00fcber das Internet erreichbar sein, damit die Smartphones mit Home Assistant App die Position an Home Assistant senden k\u00f6nnen</li> <li>In Home Assistant wurde eine Zone f\u00fcr zu Hause angelegt</li> <li>die Personen in Home Assistant haben als jeweiligen Device-Tracker ihre Smartphones mit installierter Home Assistant App zugeordnet</li> </ul>"},{"location":"projekte/solvis-heizung/#voraussetzungen-solvis-heizung","title":"Voraussetzungen Solvis Heizung","text":"<p>Schreibender Modbus-Zugriff auf Register 2818 (HKR1 Betriebsart)</p>"},{"location":"projekte/solvis-heizung/#automatisierung-in-home-assistant","title":"Automatisierung in Home Assistant","text":"<p>Das ganze l\u00e4sst sich grafisch im Automatisierungseditor zusammenklicken, das folgende YAML kam dabei heraus:</p> <pre><code>alias: Heizung Absenkbetrieb wenn keiner zu Hause\ndescription: \"\"\ntrigger:\n  - platform: zone\n    entity_id: person.johndoe\n    zone: zone.home\n    event: leave\n  - platform: zone\n    entity_id: person.janedoe\n    zone: zone.home\n    event: leave\ncondition:\n  - condition: not\n    conditions:\n      - condition: zone\n        entity_id: person.johndoe\n        zone: zone.home\n      - condition: zone\n        entity_id: person.janedoe\n        zone: zone.home\n  - condition: state\n    entity_id: sensor.hkr1betriebsart\n    state: Automatik\naction:\n  - service: modbus.write_register\n    data:\n      address: 2818\n      slave: 1\n      value: 4\n      hub: SolvisRemote\n    enabled: true\n  - service: notify.mobile_app_oneplus8pro\n    data:\n      message: Heizung auf Absenkbetrieb weil keiner daheim....\nmode: single\n</code></pre> <p>Automatisierung wird getriggert wenn jemand die Zone \"Home\" verl\u00e4sst. Dann werden die Bedingungen gepr\u00fcft: Wenn keiner zu Hause ist und der Betriebsmodus des Heizkreislaufs auf Automatik steht (also nicht manuell ver\u00e4ndert wurde), dann schreibe \"4\" in Modbus Register 2818 was laut Modbus Doku von Solvis dem Absenkbetrieb entspricht und sende noch eine Mitteilung ans Smartphone.</p> <p>Umgekehrt wenn wieder jemand nach Hause kommt</p> <pre><code>alias: Heizung auf Automatik wenn zur\u00fcck daheim\ndescription: \"\"\ntrigger:\n  - platform: zone\n    entity_id: person.johndoe\n    zone: zone.home\n    event: enter\n  - platform: zone\n    entity_id: person.janedoe\n    zone: zone.home\n    event: enter\ncondition:\n  - condition: state\n    entity_id: sensor.hkr1betriebsart\n    state: Absenkbetrieb\naction:\n  - service: modbus.write_register\n    data:\n      address: 2818\n      slave: 1\n      value: 2\n      hub: SolvisRemote\n    enabled: true\n  - service: notify.mobile_app_oneplus8pro\n    data:\n      message: Heizung auf Automatik\nmode: single\n</code></pre> <p>Automatisierung wird getriggert, wenn eine der Personen die Zone \"Home\" betreten. Dann wird gepr\u00fcft, ob der aktuelle Betriebszustand des Heizkreislaufes dem Zustand \"Absenkbetrieb\" entspricht. Wenn ja, dann schreibe \"2\" in das Register \"2818\" der Solvis Heizung was dem Automatikbetrieb entspricht und sende noch eine Nachricht an das Smartphone.</p>"},{"location":"projekte/solvis-heizung/#links-zu-solvis-doku","title":"Links zu Solvis Doku","text":"<p>Doku: Solvis Modbus Register</p>"},{"location":"projekte/stromverbrauch/","title":"(digitalen) Stromz\u00e4hler mit ESP8266 auslesen","text":"<p>Das Auslesen eines digitalen Stromz\u00e4hlers (EhZ) geschieht anhand der optischen S0-Schnittstelle bei der der Stromz\u00e4hler den Verbrauch \u00fcber die Impulsrate einer IR-LED anzeigt. Hier zeigen 10000 Impulse 1 kwH an. \u00dcber die Pulsrate kann der aktuelle Leistungsbedarf in Watt berechnet werden. Die S0-Schnittstelle ist hier mittels einer IR-Led ausgef\u00fchrt die mittels eines Phototransistors oder wie in meinem Fall \u00fcber ein TCRT-5000 (IR-Licht/Abstandssensor) ausgelesen werden kann.</p> <p>Gut zu wissen: mit einer Handykamera (meist die Selfie-Kamera) kann man meist die IR-Signale \"sehen\" da dort kein IR-Filter eingebaut ist. Beim Hager EhZ sieht man allerdings nur die Signale der seriellen SML-Schnittstelle. Die Impulse der S0-IR-Led waren zu schwach um sie sichtbar in der Fotoansicht zu sehen.</p>"},{"location":"projekte/stromverbrauch/#hardware","title":"Hardware","text":"<ul> <li>ESP8266 NodeMCU</li> <li>Phototransistor oder TCRT-5000 (IR-Licht/Abstandssensor)</li> <li>K\u00e4belchen</li> <li>USB-Netzteil</li> </ul>"},{"location":"projekte/stromverbrauch/#software-auf-esp8266","title":"Software auf ESP8266","text":"<ul> <li>ESPHome</li> </ul>"},{"location":"projekte/stromverbrauch/#auszug-esphome-yaml","title":"Auszug ESPhome YAML","text":"<pre><code> - platform: pulse_counter\n    pin: GPIO5\n    unit_of_measurement: 'W'\n    name: 'Energieverbrauch'\n    update_interval: 60s\n    filters:\n    # - multiply: 0.06 in KW\n      - multiply: 6 # in W\n    accuracy_decimals: 0\n    icon: 'mdi:flash'\n    id: energieverbrauch_w\n\n  # Dieser Sensor errechnet die Wh aus den aktuellen Verbrauchswerten in W  \n  - platform: total_daily_energy\n    name: \"Tagesverbrauch\"\n    power_id: energieverbrauch_w\n\ntime:\n  - platform: sntp\n    id: my_time\n</code></pre>"},{"location":"projekte/stromverbrauch/#home-assistant","title":"Home Assistant","text":"<p>Dort wird \u00fcber die Integration \"utility_meter\" des Sensors \"sensor.tagesverbrauch\" (siehe ESPHome Sensor vom Typ \"total_daily_energy\") der Stromverbrauch in Wh \u00fcber die Zeitr\u00e4ume </p> <ul> <li>t\u00e4glich</li> <li>w\u00f6chentlich</li> <li>monatlich</li> <li>j\u00e4hrlich</li> </ul> <p>aufgenommen und angezeigt. Diese Sensoren dienen auch als Datenbasis zur Darstellung des Verbrauchs in Grafana via InfluxDB.</p>"},{"location":"projekte/stromverbrauch/#auszug-home-assistant-konfiguration","title":"Auszug Home Assistant Konfiguration","text":"<pre><code>sensor:\n\nutility_meter:\n  stromverbrauch_tag:\n    source: sensor.tagesverbrauch\n    cycle: daily\n  stromverbrauch_woche:  \n    source: sensor.tagesverbrauch\n    cycle: weekly\n  stromverbrauch_monat:\n    source: sensor.tagesverbrauch\n    cycle: monthly\n  stromverbrauch_jahr:\n    source: sensor.tagesverbrauch\n    cycle: yearly\n</code></pre>"},{"location":"projekte/stromverbrauch/#verbrauchswerte-in-grafana","title":"Verbrauchswerte in Grafana","text":""},{"location":"projekte/tasterschaltung/","title":"Eltako Stromsto\u00dfrelais durch Shelly 1PM ersetzen","text":"<p>Achtung!</p> <p>Arbeiten an 230V k\u00f6nnen t\u00f6dlich sein. Falls kein Know-How vorhanden ist, lieber einen Elektroinstallateur beauftragen! </p>  <p>Durch ein Shelly 1PM wird eine Tasterschaltung f\u00fcr Flurlicht smart \u00fcber Home Assistant steuerbar. Zus\u00e4tzlich kann der Stromverbrauch gemessen werden. Eingesetzt wurden Shelly 1PM mit der Original Firmware ohne Aktivierung der Cloud-Anbindung. Anbindung an Home Assistant via der nativen Shelly Integration f\u00fcr Home Assistant. Vorteil der Shelly1PM: man kann weiterhin \u00fcber die vorhandenen 230V Tasterschalter das Licht an und aus schalten.</p>"},{"location":"projekte/tasterschaltung/#benotigte-hardware","title":"ben\u00f6tigte Hardware","text":"<ul> <li>Shelly 1PM</li> <li>Wago Klemmen</li> <li>etwas Kabel</li> <li>Know How</li> </ul>"},{"location":"projekte/tasterschaltung/#konfiguration-shelly-1pm","title":"Konfiguration Shelly 1PM","text":"<p>Damit der Shelly 1 PM als Stromsto\u00dfrelais fungiert, muss der Button-Type auf \"Momentary\" eingestellt werden. </p>"},{"location":"projekte/tasterschaltung/#home-assistant","title":"Home Assistant","text":"<p>Home Assistant erkennt Shelly Devices automatisch, sofern diese gem\u00e4\u00df Anleitung eingerichtet sind. Alternativ w\u00e4re auch eine Integration \u00fcber MQTT m\u00f6glich, was ich vor der Einf\u00fchrung der nativen Integration benutzte.</p>"},{"location":"projekte/wasserverbrauch/","title":"Wasserz\u00e4hler mit ESP32-Cam auslesen (Ai on the Edge)","text":"<p>Ein \u00fcblicher Wasserz\u00e4hler kann leider nicht so einfach automatisch ausgelesen werden, es fehlen magnetische, elektronische oder sonstige Schnittstellen. Bleibt nur die M\u00f6glichkeit optisch per Kamera den Z\u00e4hlerstand irgendwie auszulesen. Viele Projekte haben schon einige Methoden probiert und funktionieren eher m\u00e4\u00dfig.  Zuletzt fand ich ein Projekt welches hervorragend nun auch den Wasserz\u00e4hler zuverl\u00e4ssig auslesen kann. Das Projekt kann aber auch f\u00fcr andere Z\u00e4hlerst\u00e4nde verwendet werden, wie z.B. Stromz\u00e4hler.</p> <p>Das Projekt nennt sich Ai on the Edge und setzt sich aus den g\u00fcnstigen Hardwarekomponenten ESP32-Cam, eine kleine SD-Karte und einem vortrainierten neuronalem Netzwerk zusammen, das im Vorfeld vom Ersteller des Projektes mit vielen Bildern von Ziffern verschiedener Z\u00e4hler und analoger Zeigerpositionen trainiert wurde.</p> <p>Die ESP32-Cam wird zuerst auf den eigenen Z\u00e4hler montiert. Anschlie\u00dfend werden die Stellen der Ziffern und Zeiger definiert, die dann sp\u00e4ter zyklisch erkannt werden.</p> <p>Die Anbindung an Home Assistant geschieht dann per MQTT.</p>"},{"location":"projekte/wasserverbrauch/#benotigte-hardware","title":"ben\u00f6tigte Hardware","text":"<ul> <li>ESP32-Cam</li> <li>K\u00e4belchen f\u00fcr Stromversorgung</li> <li>UART-TTL-USB-Adapter f\u00fcr die Programmierung der ESP32-Cam (hat kein USB wie eine NodeMCU)</li> <li>USB-Netzteil</li> <li>Geh\u00e4use gibt's gleich passend zum Projekt bei Thingiverse zum drucken</li> </ul>"},{"location":"projekte/wasserverbrauch/#softwaredokumentation","title":"Software/Dokumentation","text":"<ul> <li>AI-on-the-edge-device</li> </ul>"},{"location":"projekte/wasserverbrauch/#auszug-home-assistant-yaml","title":"Auszug Home Assistant YAML","text":"<pre><code>sensor:\n - platform: \"mqtt\"\n   name: \"Wasserz\u00e4hler\"\n   state_topic: \"wasserzaehler/main/value\"\n   value_template: \"{{ value }}\"\n   unit_of_measurement: \"m\u00b3\"\n   icon: \"mdi:water-pump\"\n - platform: \"mqtt\"\n   name: \"Wasserz\u00e4hler_Liter\"\n   state_topic: \"wasserzaehler/main/value\"\n   value_template: \"{{( value | float * 1000 ) | round(2)}}\"\n   unit_of_measurement: \"l\"\n   icon: \"mdi:water-pump\"\n - platform: \"mqtt\"\n   name: \"Wasserz\u00e4hler Flussrate\"\n   state_topic: \"wasserzaehler/main/rate\"\n   value_template: \"{{ value }}\"\n   icon: \"mdi:swap-vertical\"\n - platform: \"mqtt\"\n   name: \"Wasserz\u00e4hler letzter Wert\"\n   state_topic: \"wasserzaehler/main/timestamp\"\n   value_template: \"{{ value }}\"\n   icon: \"mdi:clock-outline\"\nbinary_sensor:\n - platform: \"mqtt\"\n   name: \"Wasserz\u00e4hler Fehler\"\n   state_topic: \"wasserzaehler/main/error\"\n   value_template: \"{{ value != 'no error' }}\"\n   json_attributes_topic: \"wasserzaehler/main/json\"\n   icon: \"mdi:alert-circle\"\n\nutility_meter:\n  wasserverbrauch_tag:\n    source: sensor.wasserzahler\n    cycle: daily\n  wasserverbrauch_woche:\n    source: sensor.wasserzahler\n    cycle: weekly\n  wasserverbrauch_monat:\n    source: sensor.wasserzahler\n    cycle: monthly\n  wasserverbrauch_jahr:\n    source: sensor.wasserzahler\n    cycle: yearly\n\n  wasserverbrauch_tag_liter:\n    source: sensor.wasserzahler_liter\n    cycle: daily\n  wasserverbrauch_woche_liter:\n    source: sensor.wasserzahler_liter\n    cycle: weekly\n  wasserverbrauch_monat_liter:\n    source: sensor.wasserzahler_liter\n    cycle: monthly\n  wasserverbrauch_jahr_liter:\n    source: sensor.wasserzahler_liter\n    cycle: yearly\n</code></pre>"}]}