{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home Assistant, ESP8266 und mehr... \u00b6 Nachfolgend ein paar Anleitungen und Anregungen f\u00fcr die Realisierung von smarten Hausprojekten. Home Assistant wird als Zentrale eingesetzt. Bisher vorhanden: verschiedene ESP8266 NodeMCUs zum Auslesen von Gasz\u00e4hler und Stromz\u00e4hler Wasserz\u00e4hler mit ESP32-Cam (AI-on-the-edge-device) Auslesen einer Solvis Heizung via Modbus TCP Feinstaubsensor auf ESP8266-Basis von Luftdaten.info Austausch von mehreren Eltako Stromsto\u00dfrelais durch ein Shelly 1PM zur smarten Flurlichtschaltung DIY Halterung f\u00fcr Unifi APs DIY Lichtrahmen mit WLED und Home Assistant Sidewinder X1 3D-Drucker mit LED-Statusbeleuchtung PixelIT LED Matrix Clock (smarte LED-Matrix Uhr) Hier gehts zur Projekt\u00fcbersicht","title":"Home Assistant, ESP8266 und mehr..."},{"location":"#home-assistant-esp8266-und-mehr","text":"Nachfolgend ein paar Anleitungen und Anregungen f\u00fcr die Realisierung von smarten Hausprojekten. Home Assistant wird als Zentrale eingesetzt. Bisher vorhanden: verschiedene ESP8266 NodeMCUs zum Auslesen von Gasz\u00e4hler und Stromz\u00e4hler Wasserz\u00e4hler mit ESP32-Cam (AI-on-the-edge-device) Auslesen einer Solvis Heizung via Modbus TCP Feinstaubsensor auf ESP8266-Basis von Luftdaten.info Austausch von mehreren Eltako Stromsto\u00dfrelais durch ein Shelly 1PM zur smarten Flurlichtschaltung DIY Halterung f\u00fcr Unifi APs DIY Lichtrahmen mit WLED und Home Assistant Sidewinder X1 3D-Drucker mit LED-Statusbeleuchtung PixelIT LED Matrix Clock (smarte LED-Matrix Uhr) Hier gehts zur Projekt\u00fcbersicht","title":"Home Assistant, ESP8266 und mehr..."},{"location":"projekte/feinstaubsensor/","text":"Feinstaubsensor mit ESP8266 und Home Assistant \u00b6 Nachfolgend ein paar Infos wie man einen ESP8266-basierenden Feinstaubsensor nach Anleitung von Luftdaten.info in Home Assistant einbindet. Zus\u00e4tzlich wird ein m\u00f6gliches Geh\u00e4use gezeigt da das Verstauen der Elektronik gezeigt. ben\u00f6tigte Hardware \u00b6 ESP8266 etwas Kabel etwas Schlauch (z.B. Aquarienschlauch f\u00fcr CO2) Feinstaubsensormodul SDS011 (optionale weitere Sensoren), hier DHT22 f\u00fcr Temperatur und Luftfeuchte Geh\u00e4use, hier eine Abzweigdose Einrichtung \u00b6 Die Einrichtung wird hier nicht beschrieben, siehe die Anleitungen unter Luftdaten.info Home Assistant \u00b6 Die Firmware von Luftdaten.info bietet auch eine lokale API-Schnittstelle die sich per Home-Assistant auslesen l\u00e4sst. Auszug configuration.yaml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 - platform: command_line name: \"Luftdata PM10\" command: 'curl http://ipfeinstaubsensor/data.json' value_template: \" {{ value_json.sensordatavalues [ 0 ] .value | round ( 2 ) }} \" unit_of_measurement: \"\u00b5g/m\u00b3\" - platform: command_line name: \"Luftdata PM2.5\" command: 'curl http://ipfeinstaubsensor/data.json' value_template: \" {{ value_json.sensordatavalues [ 1 ] .value | round ( 2 ) }} \" unit_of_measurement: \"\u00b5g/m\u00b3\" - platform: command_line name: \"Luftdata Temperatur DHT22\" command: 'curl http://ipfeinstaubsensor/data.json' value_template: \" {{ value_json.sensordatavalues [ 2 ] .value | round ( 1 ) }} \" unit_of_measurement: \"\u00b0C\" - platform: command_line name: \"Luftdata Luftfeuchte DHT22\" command: 'curl http://ipfeinstaubsensor/data.json' value_template: \" {{ value_json.sensordatavalues [ 3 ] .value | round ( 1 ) }} \" unit_of_measurement: \"%\" - platform: command_line name: \"Luftdata_WLAN_Empfang\" command: 'curl http://ipfeinstaubsensor/data.json' value_template: \" {{ value_json.sensordatavalues [ 7 ] .value | round ( 0 ) }} \" unit_of_measurement: \"dBm\" - platform: statistics name: pm10 stats entity_id: sensor.luftdata_pm10 max_age: minutes: 60 - platform: statistics name: pm25 stats entity_id: sensor.luftdata_pm2_5 max_age: minutes: 60","title":"Feinstaubsensor mit ESP8266 und Home Assistant"},{"location":"projekte/feinstaubsensor/#feinstaubsensor-mit-esp8266-und-home-assistant","text":"Nachfolgend ein paar Infos wie man einen ESP8266-basierenden Feinstaubsensor nach Anleitung von Luftdaten.info in Home Assistant einbindet. Zus\u00e4tzlich wird ein m\u00f6gliches Geh\u00e4use gezeigt da das Verstauen der Elektronik gezeigt.","title":"Feinstaubsensor mit ESP8266 und Home Assistant"},{"location":"projekte/feinstaubsensor/#benotigte-hardware","text":"ESP8266 etwas Kabel etwas Schlauch (z.B. Aquarienschlauch f\u00fcr CO2) Feinstaubsensormodul SDS011 (optionale weitere Sensoren), hier DHT22 f\u00fcr Temperatur und Luftfeuchte Geh\u00e4use, hier eine Abzweigdose","title":"ben\u00f6tigte Hardware"},{"location":"projekte/feinstaubsensor/#einrichtung","text":"Die Einrichtung wird hier nicht beschrieben, siehe die Anleitungen unter Luftdaten.info","title":"Einrichtung"},{"location":"projekte/feinstaubsensor/#home-assistant","text":"Die Firmware von Luftdaten.info bietet auch eine lokale API-Schnittstelle die sich per Home-Assistant auslesen l\u00e4sst. Auszug configuration.yaml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 - platform: command_line name: \"Luftdata PM10\" command: 'curl http://ipfeinstaubsensor/data.json' value_template: \" {{ value_json.sensordatavalues [ 0 ] .value | round ( 2 ) }} \" unit_of_measurement: \"\u00b5g/m\u00b3\" - platform: command_line name: \"Luftdata PM2.5\" command: 'curl http://ipfeinstaubsensor/data.json' value_template: \" {{ value_json.sensordatavalues [ 1 ] .value | round ( 2 ) }} \" unit_of_measurement: \"\u00b5g/m\u00b3\" - platform: command_line name: \"Luftdata Temperatur DHT22\" command: 'curl http://ipfeinstaubsensor/data.json' value_template: \" {{ value_json.sensordatavalues [ 2 ] .value | round ( 1 ) }} \" unit_of_measurement: \"\u00b0C\" - platform: command_line name: \"Luftdata Luftfeuchte DHT22\" command: 'curl http://ipfeinstaubsensor/data.json' value_template: \" {{ value_json.sensordatavalues [ 3 ] .value | round ( 1 ) }} \" unit_of_measurement: \"%\" - platform: command_line name: \"Luftdata_WLAN_Empfang\" command: 'curl http://ipfeinstaubsensor/data.json' value_template: \" {{ value_json.sensordatavalues [ 7 ] .value | round ( 0 ) }} \" unit_of_measurement: \"dBm\" - platform: statistics name: pm10 stats entity_id: sensor.luftdata_pm10 max_age: minutes: 60 - platform: statistics name: pm25 stats entity_id: sensor.luftdata_pm2_5 max_age: minutes: 60","title":"Home Assistant"},{"location":"projekte/gasverbrauch/","text":"Gasz\u00e4hler mit ESP8266 und Home Assistant auslesen \u00b6 Ein Standardgasz\u00e4hler hat auf den letzen Ziffern einen Magneten verbaut, der bei jedem Durchlauf mit einem Reed-Kontakt ausgelesen werden kann. Ein Reed-Kontakt (Magnetschalter) erzeugt bei jedem Durchlauf einen Impuls. Diese Impulse werden per ESPhome gez\u00e4hlt und in die Kubikmeter umgerechnet. 1 Impuls entspricht 0,01 m\u00b3. ben\u00f6tigte Hardware \u00b6 ESP8266 NodeMCU Reed Sensor, z.B. MK-471B bei Reichelt K\u00e4belchen USB-Netzteil Geh\u00e4use, z.B. Kabelabzweigdose Software auf ESP8266 \u00b6 ESPHome Auszug ESPhome YAML \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 - platform : pulse_counter pin : number : GPIO5 mode : INPUT_PULLUP name : \"Gasverbrauch\" update_interval : 60s filters : - lambda : | - static float total_value = 0 . 0 ; total_value += x * 0 . 01 ; return total_value ; unit_of_measurement : \"m\u00b3\" accuracy_decimals : 2 icon : 'mdi:fire' Auszug Home Assistant YAML \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 sensor : utility_meter : gasverbrauch_daily : source : sensor . gasverbrauch cycle : daily gasverbrauch_weekly : source : sensor . gasverbrauch cycle : weekly gasverbrauch_monthly : source : sensor . gasverbrauch cycle : monthly gasverbrauch_yearly : source : sensor . gasverbrauch cycle : yearly Auswertung in Grafana \u00b6 Zur besseren Darstellung der Verbrauchsdaten bietet sich Grafana an. Die Daten von Home Assistant werden hier in eine InfluxDB geschrieben und \u00fcber Grafana visualisiert.","title":"Gasz\u00e4hler mit ESP8266 und Home Assistant auslesen"},{"location":"projekte/gasverbrauch/#gaszahler-mit-esp8266-und-home-assistant-auslesen","text":"Ein Standardgasz\u00e4hler hat auf den letzen Ziffern einen Magneten verbaut, der bei jedem Durchlauf mit einem Reed-Kontakt ausgelesen werden kann. Ein Reed-Kontakt (Magnetschalter) erzeugt bei jedem Durchlauf einen Impuls. Diese Impulse werden per ESPhome gez\u00e4hlt und in die Kubikmeter umgerechnet. 1 Impuls entspricht 0,01 m\u00b3.","title":"Gasz\u00e4hler mit ESP8266 und Home Assistant auslesen"},{"location":"projekte/gasverbrauch/#benotigte-hardware","text":"ESP8266 NodeMCU Reed Sensor, z.B. MK-471B bei Reichelt K\u00e4belchen USB-Netzteil Geh\u00e4use, z.B. Kabelabzweigdose","title":"ben\u00f6tigte Hardware"},{"location":"projekte/gasverbrauch/#software-auf-esp8266","text":"ESPHome","title":"Software auf ESP8266"},{"location":"projekte/gasverbrauch/#auszug-esphome-yaml","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 - platform : pulse_counter pin : number : GPIO5 mode : INPUT_PULLUP name : \"Gasverbrauch\" update_interval : 60s filters : - lambda : | - static float total_value = 0 . 0 ; total_value += x * 0 . 01 ; return total_value ; unit_of_measurement : \"m\u00b3\" accuracy_decimals : 2 icon : 'mdi:fire'","title":"Auszug ESPhome YAML"},{"location":"projekte/gasverbrauch/#auszug-home-assistant-yaml","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 sensor : utility_meter : gasverbrauch_daily : source : sensor . gasverbrauch cycle : daily gasverbrauch_weekly : source : sensor . gasverbrauch cycle : weekly gasverbrauch_monthly : source : sensor . gasverbrauch cycle : monthly gasverbrauch_yearly : source : sensor . gasverbrauch cycle : yearly","title":"Auszug Home Assistant YAML"},{"location":"projekte/gasverbrauch/#auswertung-in-grafana","text":"Zur besseren Darstellung der Verbrauchsdaten bietet sich Grafana an. Die Daten von Home Assistant werden hier in eine InfluxDB geschrieben und \u00fcber Grafana visualisiert.","title":"Auswertung in Grafana"},{"location":"projekte/halterung-unif-ac-pro/","text":"DIY Halterung f\u00fcr Unifi AC-Pro Accesspoint \u00b6 Unifi APs werden entweder an der Decke oder an einer Wand montiert. Falls man sich die L\u00f6cher bei einer Wandmontage sparen m\u00f6chte, z.B. weil man den AP auf einem Regal o.\u00e4. platzieren m\u00f6chte, hier ein kleiner Tipp f\u00fcr eine DIY-Halterung. Ben\u00f6tigtes Material: Eine Unterlage, z.B. Holzbrett Kabelsammelhalterung in der H\u00f6he 4,5 cm ( z.B. die hier ) paar kurze Schrauben Die Kabelsammelhalter rasten in der ge\u00f6ffneten Position genau in den runden Rasterring auf der R\u00fcckseite des APs ein. Dadurch kann er nun recht stabil in die Kabelsammelhalter gesteckt werden Fotos \u00b6","title":"DIY Halterung f\u00fcr Unifi AC-Pro Accesspoint"},{"location":"projekte/halterung-unif-ac-pro/#diy-halterung-fur-unifi-ac-pro-accesspoint","text":"Unifi APs werden entweder an der Decke oder an einer Wand montiert. Falls man sich die L\u00f6cher bei einer Wandmontage sparen m\u00f6chte, z.B. weil man den AP auf einem Regal o.\u00e4. platzieren m\u00f6chte, hier ein kleiner Tipp f\u00fcr eine DIY-Halterung. Ben\u00f6tigtes Material: Eine Unterlage, z.B. Holzbrett Kabelsammelhalterung in der H\u00f6he 4,5 cm ( z.B. die hier ) paar kurze Schrauben Die Kabelsammelhalter rasten in der ge\u00f6ffneten Position genau in den runden Rasterring auf der R\u00fcckseite des APs ein. Dadurch kann er nun recht stabil in die Kabelsammelhalter gesteckt werden","title":"DIY Halterung f\u00fcr Unifi AC-Pro Accesspoint"},{"location":"projekte/halterung-unif-ac-pro/#fotos","text":"","title":"Fotos"},{"location":"projekte/lichtrahmen/","text":"DIY Lichtrahmen mit WLED und Home Assistant \u00b6 Inspiriert wurde das von folgender Seite bzw. die Reflektion-Lichtskulpturen . Der Lichtrahmen besteht aus schwarz eloxierten Aluprofilen inklusive Diffusor und ist mit Abstand zur Wand montiert, so dass keine einzelnen LEDs mehr sichtbar sind. Die Aufh\u00e4ngung erfolgt mittels einem fast unsichtbaren Nylon-Faden wie bei einem Bilderrahmen. Ben\u00f6tigtes Werkzeug \u00b6 Gehrungss\u00e4ge f\u00fcr Metall (je pr\u00e4ziser desto besser) evtl. kleine Metalls\u00e4ge f\u00fcr Feinarbeiten (Aussparung LED-Stromzuf\u00fchrung) L\u00f6tk\u00f6lben Feilen/Schleifpapier zum Entgraten 3D-Drucker Bohrmaschine/Akkuschrauber mit 2 mm Bohrer Ben\u00f6tigtes Material \u00b6 Alu-Profile inkl. Diffusor-Abdeckung ( z.B.diese hier ) L-Verbinder f\u00fcr die Alu-Profile: Hier habe ich diese hier verwendet, und im Cura-Slicer auf die Ma\u00dfe 22x22x4mm skaliert, gedruck mit PLA Acryl-Rundst\u00e4be als Abstandshalter zur Wand (hier 5 mm, geht auch d\u00fcnner) Nylon-Schnur (Drachenschnur) f\u00fcr die Aufh\u00e4ngung wie ein Bilderrahmen LED-Streifen (hier ein RGBWW-Streifen mit 60 LEDs/m auf Basis mit SK6812 Modulen f\u00fcr die individuelle Steuerung und einem separaten Warmweis-Kanal, Betriebsspannung 5V, L\u00e4nge 5m) (AliExpress oder Amazon) 5V/10A Netzteil (3-4 A reichen f\u00fcr die Anzahl LEDs auch aus) Kabel um die einzelnen LED-Segmente miteinander zu verbinden ESP32 f\u00fcr die Ansteuerung WLED als Software auf ESP32 f\u00fcr die Ansteuerung der LEDs Hinweise bevor es losgeht \u00b6 Aluminium ist weich, und schwarz eloxiertes Aluminium ist noch empfindlicher da jeder Kratzer sofort die schwarze Farbe l\u00f6st und unsch\u00f6ne Stellen zur\u00fcckl\u00e4sst. Also alle Arbeiten mit dem Aluminium sehr sorgf\u00e4ltig ausf\u00fchren. Z.B. immer Stoff oder T\u00fccher unterlegen, beim S\u00e4gen die Gehrungss\u00e4ge auskleiden. Alle Arbeiten an den Alu-Profilen am besten an einem Probest\u00fcck erstmal testweise durchf\u00fchren (z.B. das S\u00e4gen oder Bohren von L\u00f6chern) Bau des Lichtrahmens \u00b6 Aluprofile zuschneiden \u00b6 Sorgf\u00e4ltig und pr\u00e4zise s\u00e4gen! Am besten die Alu-Profile mit einer Schraubzwinge oder \u00e4hnlichem fixieren. Beachtet, dass das Alu sehr empfindlich ist und Kratzer direkt sichtbar sind. Am besten immer mit Stoff Kontaktfl\u00e4chen sch\u00fctzen. Mehrmals pr\u00fcfen ob man auch den Winkel in die richtige Richtung s\u00e4gt.. Aluprofile zusammensetzen \u00b6 Sind die Aluprofile zuges\u00e4gt und bilden eine Rahmen, muss dieser zusammengesteckt werden. Ich druckte dazu diese hier aus und skalierte sie f\u00fcr das Aluprofil mit folgenden Werten: 22x22x4 mm (LxBxH). Hier am besten ein paar Probedrucke anfertigen und schauen ob diese sch\u00f6n b\u00fcndig passen. Unter dem Verbinder m\u00fcssen noch die Kabel f\u00fcr die Verbindung der einzelnen LED-Streifen hindurchpassen. L\u00f6cher f\u00fcr Aufh\u00e4ngung bohren \u00b6 In das Aluprofil f\u00fcr die Oberseite des Lichtrahmens werden mit einem 2 mm Bohrer zwei L\u00f6cher f\u00fcr die Aufh\u00e4ngung gebohrt. Die L\u00f6cher entgraten. Sp\u00e4ter werden hier die Schn\u00fcre f\u00fcr die Aufh\u00e4ngung durchgef\u00fchrt. Aussparung f\u00fcr Zuleitung LED-Streifen \u00b6 Sofern gew\u00fcnscht, kann auf dem Aluprofil der Unterseite eine Kerbe ausges\u00e4gt werden um die Zuleitung des LED-Streifens dort durchzuf\u00fchren. Auch hier Entgraten um scharfe Kanten zu vermeiden. LED-Streifen zuschneiden \u00b6 Nun werden die einzelnen LED-Streifen aus dem 5m LED-Strip zugeschnitten. Der LED-Streifen hat Schnittmarkierungen mit L\u00f6tpunkten um diese sp\u00e4ter wieder zu verbinden. Schwierig sind die Ecken des Lichtrahmens. Gerade die Zuleitung des LED-Streifens nimmt etwas Platz am Anfang weg. Basierend auf dessen wurden die Abst\u00e4nde der ersten LED zu den Ecken gleich gew\u00e4hlt. Je weiter der Abstand zu den Ecken, desto dunkler wird sp\u00e4ter die Ecke auch ausgeleuchtet. Dies also beachten. Tip An den Enden der einzuklebenden LED-Streifen vorher ein St\u00fcck Isolierband auf das Aluprofil einkleben um sp\u00e4ter beim L\u00f6ten evtl. Verbindungen mit dem Aluminium zu vermeiden Die Streifen auf der kurzen und langen Seite sollten jeweils die gleiche Anzahl von LEDs haben um eine gleichm\u00e4\u00dfige Ausleuchtung zu erhalten. Anschlie\u00dfend die LED-Streifen der einzelnen Seiten \u00fcber Eck miteinander verl\u00f6ten mit kurzen Kabeln/Litzen. Die Kabel werden unter die 3D-gedruckten L-Verbinder verlegt. Tip Tip f\u00fcr nicht-L\u00f6tspezialisten: opfert beim zuschneiden der LED-Streifen lieber eine LED um daf\u00fcr einen kompletten L\u00f6tpunkt an der Schnittkante zu erhalten. Schneidet man die LEDs genau in der Mitte der L\u00f6tpunkte/Schnittkante ist dies schon sehr knapp f\u00fcr eine weitere Anbindung. Tip Kabel/Litze vorher mit L\u00f6tzinn benetzen und anschlie\u00dfend auch erst die L\u00f6tpunkte mit L\u00f6tzinn versehen damit es einen sch\u00f6nen Tropfen auf dem L\u00f6tpunkt ergibt. Dann ist das zusammenl\u00f6ten der Kabel auf L\u00f6tpunkt sehr einfach und sauber. Tip Sollten durch nicht 100%ig saubere und glatte 45\u00b0-Winkel beim Zusammenstecken der Ecken die Profile nicht ganz b\u00fcndig passen und die darunter liegenden Kabel durch einen Spalt sichtbar sein, diese am besten mit schwarzem Isolierband umwickenln um dies zu kaschieren. Anschlie\u00dfend ist der Lichtrahmen dann erstmal fertig zusammengebaut und kann auch nicht mehr ohne L\u00f6sen der L\u00f6tpunkte auseinandergenommen werden. Diffusor einsetzen \u00b6 Die Diffusorprofile einfach auf die richtige L\u00e4nge zuschneiden und einklipsen. Verkabelung \u00b6 Falls nicht sowieso schon geschehen, sollte die Verkbabelung nun f\u00fcr das probeweise Ausprobieren erfolgen. Der ESP32 sowie der Leuchtrahmen werden von dem 5V Netzteil versorgt. Das ESP32-DevBoard hat einen 5V Pin der mit dem Netzteil verbunden wird. GND ebenso. Das gleiche gilt f\u00fcr die LEDs: 5V an rot, Masse auf Schwarz. Die Steuerleitung f\u00fcr die LEDs muss an GPIO2 im Default. Wenn unklar bei WLED in den Docs suchen bzw. ein Pinout des ESP-Boards suchen. Attention Falls der ESP von einer anderen Stromquelle gespeist wird als der LED-Streifen, z.B. von einem USB-Netzteil, so muss es ein einheitliches GND geben. D.h. beide GNDs m\u00fcssen verbunden sein, sonst kommt es nur zu wild blinkendem LED-Pixelsalat da es dann unterschiedliche Null-Potentiale bei ESP und LED-Streifen gibt. Abstand zur Wand bestimmen und Abstandshalter zuschneiden \u00b6 Nun gilt es den richtigen Abstand zur Wand zu bestimmen, so dass ein sch\u00f6n diffuses Licht erzeugt wird. Einzelne LEDs sollten nicht mehr erkennbar sein. Hier waren 5 cm der gew\u00e4hlte Abstand. Dazu werden dann die Acryl-Rundst\u00e4be in die entsprechende L\u00e4nge zuges\u00e4gt. An den Ecken wurden diese mit Hei\u00dfkleber aufgeklebt. Aufh\u00e4ngung \u00b6 In die zwei L\u00f6cher des oberen Alu-Profiles wird nun ein Nylon-Faden (1 mm) befestigt. So kann der Rahmen wie ein Bild aufgeh\u00e4ngt werden. Resultat: Konfiguration in WLED \u00b6 Tip Die einzelnen Seiten des Rahmens als Segmente anlegen und den Mirror-Effect aktivieren. Das ergibt sehr sch\u00f6ne symmetrische Effekte. Einbindung in Home Assistant \u00b6 In der Regel wird die WLED-Instanz, sofern in gleichen Netzwerk, automatisch von Home Assistant erkannt und kann dort leicht integriert werden. Anschlie\u00dfend stehen alle M\u00f6glichkeiten offen um dar\u00fcber den Lichtrahmen zu steuern, Automatisierungen zu erstellen und Einstellungen zu \u00e4ndern. Erkenntnisse \u00b6 Sauber geschnittene 45\u00b0 Winkel sind nur mit einer sehr guten Gehrungss\u00e4ge m\u00f6glich beim S\u00e4gen der Elemente am besten noch einmal mehr pr\u00fcfen ob der Winkel in der richtigen Richtung ges\u00e4gt wird Beim zuschneiden der LED-Streifen: am besten eine LED opfern um einen vollst\u00e4ndigen L\u00f6tpunkt zu bekommen. Schneidet man in der H\u00e4lfte des L\u00f6tpunktes sind die L\u00f6tpunkte schon sehr schmal (f\u00fcr meine L\u00f6tkenntnisse) Offener Punkt \u00b6 Die Zuleitung zum Lichtrahmen muss noch aufgeh\u00fcbscht werden. Dazu soll ein Kabel m\u00f6glichst einheitlich zum Lichtrahmen gef\u00fchrt werden und der ESP bzw Netzteil noch in einem Geh\u00e4use unsichtbar am Boden verstaut werden.","title":"DIY Lichtrahmen mit WLED und Home Assistant"},{"location":"projekte/lichtrahmen/#diy-lichtrahmen-mit-wled-und-home-assistant","text":"Inspiriert wurde das von folgender Seite bzw. die Reflektion-Lichtskulpturen . Der Lichtrahmen besteht aus schwarz eloxierten Aluprofilen inklusive Diffusor und ist mit Abstand zur Wand montiert, so dass keine einzelnen LEDs mehr sichtbar sind. Die Aufh\u00e4ngung erfolgt mittels einem fast unsichtbaren Nylon-Faden wie bei einem Bilderrahmen.","title":"DIY Lichtrahmen mit WLED und Home Assistant"},{"location":"projekte/lichtrahmen/#benotigtes-werkzeug","text":"Gehrungss\u00e4ge f\u00fcr Metall (je pr\u00e4ziser desto besser) evtl. kleine Metalls\u00e4ge f\u00fcr Feinarbeiten (Aussparung LED-Stromzuf\u00fchrung) L\u00f6tk\u00f6lben Feilen/Schleifpapier zum Entgraten 3D-Drucker Bohrmaschine/Akkuschrauber mit 2 mm Bohrer","title":"Ben\u00f6tigtes Werkzeug"},{"location":"projekte/lichtrahmen/#benotigtes-material","text":"Alu-Profile inkl. Diffusor-Abdeckung ( z.B.diese hier ) L-Verbinder f\u00fcr die Alu-Profile: Hier habe ich diese hier verwendet, und im Cura-Slicer auf die Ma\u00dfe 22x22x4mm skaliert, gedruck mit PLA Acryl-Rundst\u00e4be als Abstandshalter zur Wand (hier 5 mm, geht auch d\u00fcnner) Nylon-Schnur (Drachenschnur) f\u00fcr die Aufh\u00e4ngung wie ein Bilderrahmen LED-Streifen (hier ein RGBWW-Streifen mit 60 LEDs/m auf Basis mit SK6812 Modulen f\u00fcr die individuelle Steuerung und einem separaten Warmweis-Kanal, Betriebsspannung 5V, L\u00e4nge 5m) (AliExpress oder Amazon) 5V/10A Netzteil (3-4 A reichen f\u00fcr die Anzahl LEDs auch aus) Kabel um die einzelnen LED-Segmente miteinander zu verbinden ESP32 f\u00fcr die Ansteuerung WLED als Software auf ESP32 f\u00fcr die Ansteuerung der LEDs","title":"Ben\u00f6tigtes Material"},{"location":"projekte/lichtrahmen/#hinweise-bevor-es-losgeht","text":"Aluminium ist weich, und schwarz eloxiertes Aluminium ist noch empfindlicher da jeder Kratzer sofort die schwarze Farbe l\u00f6st und unsch\u00f6ne Stellen zur\u00fcckl\u00e4sst. Also alle Arbeiten mit dem Aluminium sehr sorgf\u00e4ltig ausf\u00fchren. Z.B. immer Stoff oder T\u00fccher unterlegen, beim S\u00e4gen die Gehrungss\u00e4ge auskleiden. Alle Arbeiten an den Alu-Profilen am besten an einem Probest\u00fcck erstmal testweise durchf\u00fchren (z.B. das S\u00e4gen oder Bohren von L\u00f6chern)","title":"Hinweise bevor es losgeht"},{"location":"projekte/lichtrahmen/#bau-des-lichtrahmens","text":"","title":"Bau des Lichtrahmens"},{"location":"projekte/lichtrahmen/#aluprofile-zuschneiden","text":"Sorgf\u00e4ltig und pr\u00e4zise s\u00e4gen! Am besten die Alu-Profile mit einer Schraubzwinge oder \u00e4hnlichem fixieren. Beachtet, dass das Alu sehr empfindlich ist und Kratzer direkt sichtbar sind. Am besten immer mit Stoff Kontaktfl\u00e4chen sch\u00fctzen. Mehrmals pr\u00fcfen ob man auch den Winkel in die richtige Richtung s\u00e4gt..","title":"Aluprofile zuschneiden"},{"location":"projekte/lichtrahmen/#aluprofile-zusammensetzen","text":"Sind die Aluprofile zuges\u00e4gt und bilden eine Rahmen, muss dieser zusammengesteckt werden. Ich druckte dazu diese hier aus und skalierte sie f\u00fcr das Aluprofil mit folgenden Werten: 22x22x4 mm (LxBxH). Hier am besten ein paar Probedrucke anfertigen und schauen ob diese sch\u00f6n b\u00fcndig passen. Unter dem Verbinder m\u00fcssen noch die Kabel f\u00fcr die Verbindung der einzelnen LED-Streifen hindurchpassen.","title":"Aluprofile zusammensetzen"},{"location":"projekte/lichtrahmen/#locher-fur-aufhangung-bohren","text":"In das Aluprofil f\u00fcr die Oberseite des Lichtrahmens werden mit einem 2 mm Bohrer zwei L\u00f6cher f\u00fcr die Aufh\u00e4ngung gebohrt. Die L\u00f6cher entgraten. Sp\u00e4ter werden hier die Schn\u00fcre f\u00fcr die Aufh\u00e4ngung durchgef\u00fchrt.","title":"L\u00f6cher f\u00fcr Aufh\u00e4ngung bohren"},{"location":"projekte/lichtrahmen/#aussparung-fur-zuleitung-led-streifen","text":"Sofern gew\u00fcnscht, kann auf dem Aluprofil der Unterseite eine Kerbe ausges\u00e4gt werden um die Zuleitung des LED-Streifens dort durchzuf\u00fchren. Auch hier Entgraten um scharfe Kanten zu vermeiden.","title":"Aussparung f\u00fcr Zuleitung LED-Streifen"},{"location":"projekte/lichtrahmen/#led-streifen-zuschneiden","text":"Nun werden die einzelnen LED-Streifen aus dem 5m LED-Strip zugeschnitten. Der LED-Streifen hat Schnittmarkierungen mit L\u00f6tpunkten um diese sp\u00e4ter wieder zu verbinden. Schwierig sind die Ecken des Lichtrahmens. Gerade die Zuleitung des LED-Streifens nimmt etwas Platz am Anfang weg. Basierend auf dessen wurden die Abst\u00e4nde der ersten LED zu den Ecken gleich gew\u00e4hlt. Je weiter der Abstand zu den Ecken, desto dunkler wird sp\u00e4ter die Ecke auch ausgeleuchtet. Dies also beachten. Tip An den Enden der einzuklebenden LED-Streifen vorher ein St\u00fcck Isolierband auf das Aluprofil einkleben um sp\u00e4ter beim L\u00f6ten evtl. Verbindungen mit dem Aluminium zu vermeiden Die Streifen auf der kurzen und langen Seite sollten jeweils die gleiche Anzahl von LEDs haben um eine gleichm\u00e4\u00dfige Ausleuchtung zu erhalten. Anschlie\u00dfend die LED-Streifen der einzelnen Seiten \u00fcber Eck miteinander verl\u00f6ten mit kurzen Kabeln/Litzen. Die Kabel werden unter die 3D-gedruckten L-Verbinder verlegt. Tip Tip f\u00fcr nicht-L\u00f6tspezialisten: opfert beim zuschneiden der LED-Streifen lieber eine LED um daf\u00fcr einen kompletten L\u00f6tpunkt an der Schnittkante zu erhalten. Schneidet man die LEDs genau in der Mitte der L\u00f6tpunkte/Schnittkante ist dies schon sehr knapp f\u00fcr eine weitere Anbindung. Tip Kabel/Litze vorher mit L\u00f6tzinn benetzen und anschlie\u00dfend auch erst die L\u00f6tpunkte mit L\u00f6tzinn versehen damit es einen sch\u00f6nen Tropfen auf dem L\u00f6tpunkt ergibt. Dann ist das zusammenl\u00f6ten der Kabel auf L\u00f6tpunkt sehr einfach und sauber. Tip Sollten durch nicht 100%ig saubere und glatte 45\u00b0-Winkel beim Zusammenstecken der Ecken die Profile nicht ganz b\u00fcndig passen und die darunter liegenden Kabel durch einen Spalt sichtbar sein, diese am besten mit schwarzem Isolierband umwickenln um dies zu kaschieren. Anschlie\u00dfend ist der Lichtrahmen dann erstmal fertig zusammengebaut und kann auch nicht mehr ohne L\u00f6sen der L\u00f6tpunkte auseinandergenommen werden.","title":"LED-Streifen zuschneiden"},{"location":"projekte/lichtrahmen/#diffusor-einsetzen","text":"Die Diffusorprofile einfach auf die richtige L\u00e4nge zuschneiden und einklipsen.","title":"Diffusor einsetzen"},{"location":"projekte/lichtrahmen/#verkabelung","text":"Falls nicht sowieso schon geschehen, sollte die Verkbabelung nun f\u00fcr das probeweise Ausprobieren erfolgen. Der ESP32 sowie der Leuchtrahmen werden von dem 5V Netzteil versorgt. Das ESP32-DevBoard hat einen 5V Pin der mit dem Netzteil verbunden wird. GND ebenso. Das gleiche gilt f\u00fcr die LEDs: 5V an rot, Masse auf Schwarz. Die Steuerleitung f\u00fcr die LEDs muss an GPIO2 im Default. Wenn unklar bei WLED in den Docs suchen bzw. ein Pinout des ESP-Boards suchen. Attention Falls der ESP von einer anderen Stromquelle gespeist wird als der LED-Streifen, z.B. von einem USB-Netzteil, so muss es ein einheitliches GND geben. D.h. beide GNDs m\u00fcssen verbunden sein, sonst kommt es nur zu wild blinkendem LED-Pixelsalat da es dann unterschiedliche Null-Potentiale bei ESP und LED-Streifen gibt.","title":"Verkabelung"},{"location":"projekte/lichtrahmen/#abstand-zur-wand-bestimmen-und-abstandshalter-zuschneiden","text":"Nun gilt es den richtigen Abstand zur Wand zu bestimmen, so dass ein sch\u00f6n diffuses Licht erzeugt wird. Einzelne LEDs sollten nicht mehr erkennbar sein. Hier waren 5 cm der gew\u00e4hlte Abstand. Dazu werden dann die Acryl-Rundst\u00e4be in die entsprechende L\u00e4nge zuges\u00e4gt. An den Ecken wurden diese mit Hei\u00dfkleber aufgeklebt.","title":"Abstand zur Wand bestimmen und Abstandshalter zuschneiden"},{"location":"projekte/lichtrahmen/#aufhangung","text":"In die zwei L\u00f6cher des oberen Alu-Profiles wird nun ein Nylon-Faden (1 mm) befestigt. So kann der Rahmen wie ein Bild aufgeh\u00e4ngt werden. Resultat:","title":"Aufh\u00e4ngung"},{"location":"projekte/lichtrahmen/#konfiguration-in-wled","text":"Tip Die einzelnen Seiten des Rahmens als Segmente anlegen und den Mirror-Effect aktivieren. Das ergibt sehr sch\u00f6ne symmetrische Effekte.","title":"Konfiguration in WLED"},{"location":"projekte/lichtrahmen/#einbindung-in-home-assistant","text":"In der Regel wird die WLED-Instanz, sofern in gleichen Netzwerk, automatisch von Home Assistant erkannt und kann dort leicht integriert werden. Anschlie\u00dfend stehen alle M\u00f6glichkeiten offen um dar\u00fcber den Lichtrahmen zu steuern, Automatisierungen zu erstellen und Einstellungen zu \u00e4ndern.","title":"Einbindung in Home Assistant"},{"location":"projekte/lichtrahmen/#erkenntnisse","text":"Sauber geschnittene 45\u00b0 Winkel sind nur mit einer sehr guten Gehrungss\u00e4ge m\u00f6glich beim S\u00e4gen der Elemente am besten noch einmal mehr pr\u00fcfen ob der Winkel in der richtigen Richtung ges\u00e4gt wird Beim zuschneiden der LED-Streifen: am besten eine LED opfern um einen vollst\u00e4ndigen L\u00f6tpunkt zu bekommen. Schneidet man in der H\u00e4lfte des L\u00f6tpunktes sind die L\u00f6tpunkte schon sehr schmal (f\u00fcr meine L\u00f6tkenntnisse)","title":"Erkenntnisse"},{"location":"projekte/lichtrahmen/#offener-punkt","text":"Die Zuleitung zum Lichtrahmen muss noch aufgeh\u00fcbscht werden. Dazu soll ein Kabel m\u00f6glichst einheitlich zum Lichtrahmen gef\u00fchrt werden und der ESP bzw Netzteil noch in einem Geh\u00e4use unsichtbar am Boden verstaut werden.","title":"Offener Punkt"},{"location":"projekte/pixelclock/","text":"PixelClock, smarte LED Matrix \u00b6 Die PixelClock zeigt im Standard die Uhrzeit und Datum an (per NTP bezogen). Per MQTT bzw. API Schnittstellen k\u00f6nnen aber auch sogenannte Screens mit Text und Icons angezeigt werden. Ein Helligkeitssensor regelt die Helligkeit der Anzeige je nach Lichtst\u00e4rke im Raum. Basierend ist diese Anzeige auf dem Projekt PixelIT , das Geh\u00e4use ist mit dem 3D-Drucker gedruckt. Ben\u00f6tigtes Material \u00b6 3D-Drucker f\u00fcr das Geh\u00e4use Wemos D1 Mini WS2812 8x32 Matrix (optional) Helligkeitssensor, z.B. LDR GL5516 Ein 1000\u00b5F Kondensator f\u00fcr Stabilisierung (geht evtl. auch ohne) weiteres Infos zur Hardware und Software beim Projekt: bei Github Doku Seite Geh\u00e4use zum Drucken: Geh\u00e4use bei Thingiverse anderes Geh\u00e4use : Dieses ist das auf den Fotos sichtbare Geh\u00e4use. Nachteil beim Geh\u00e4use ist, dass der Stromanschlu\u00df auf der Unterseite ist. Ich habe die STL-Dateien ge\u00e4ndert, so dass der Stromanschlu\u00df seitlich wie auf den Fotos ist. Als Diffusor nutze ich einfach ein Blatt Papier F\u00fcr die T\u00f6nung nutze ich eine Acrylglasplatte, z.B. hier Ansteuerung \u00fcber Home Assistant \u00b6 Das Pixel It Projekt nutzt Node-Red f\u00fcr die Anzeige von Wetterdaten/sonstigen Zust\u00e4nden aus einer Heimautomatisierungsl\u00f6sung wie Home Assistant. Da dies bisher nicht im Einsatz ist, wurde die Ansteuerung \u00fcber native Services/Automatisierungen in Home Assistant realisiert. D.h. zuerst wird ein REST-Call definiert (was soll auf der Uhr angezeigt werden) und dann per Automatisierung wird dieser Service dann getriggert (z.B. alle Minute die Temperatur anzeigen). Definiton der Services \u00b6 Die Services definieren des REST-API-Call zur Pixel IT Clock, z.B. zeige die Au\u00dfentemperatur mit Icon f\u00fcr Thermomether an. Diese Services k\u00f6nnen dann per Automatisierung getriggert werden. In der Pixel IT Webobefl\u00e4che kann man die API-Calls erst testen, auch die Icons k\u00f6nnen dort sehr einfach ausgew\u00e4hlt werden. Die Doku zur API befindet sich hier 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 rest_command : pixel_aussentemperatur : url : http : //< ip der uhr >/ api / screen method : POST headers : accept : \"application/json, text/html\" payload : '{ \"switchAnimation\" : { \"aktiv\" : true , \"animation\" : \"fade\" }, \"bitmap\" : { \"data\" : [ 0 , 65535 , 65535 , 65535 , 0 , 65535 , 65535 , 0 , 0 , 65535 , 0 , 65535 , 0 , 65535 , 0 , 0 , 0 , 65535 , 63488 , 65535 , 0 , 65535 , 65535 , 0 , 0 , 65535 , 63488 , 65535 , 0 , 0 , 0 , 0 , 0 , 65535 , 63488 , 65535 , 0 , 0 , 0 , 0 , 65535 , 63488 , 63488 , 63488 , 65535 , 0 , 0 , 0 , 65535 , 63488 , 63488 , 63488 , 65535 , 0 , 0 , 0 , 0 , 65535 , 65535 , 65535 , 0 , 0 , 0 , 0 ], \"position\" : { \"x\" : 0 , \"y\" : 0 }, \"size\" : { \"width\" : 8 , \"height\" : 8 } }, \"text\" : { \"textString\" : \"{{ states.sensor.aussentemperatur.state | round(1) }}\u00b0\" , \"bigFont\" : false , \"scrollText\" : false , \"scrollTextDelay\" : 0 , \"centerText\" : true , \"position\" : { \"x\" : 7 , \"y\" : 1 }, \"hexColor\" : \"#ffffff\" } } ' content_type : 'application/json; charset=utf-8' Automatisierung \u00b6 Hier wird jede Minute der zuvor erstellte Service getriggert um die Temperatur auf der Uhr anzuzeigen. 1 2 3 4 5 6 7 8 9 alias : Pixel IT Aussentemperatur anzeigen description : '' trigger : - platform : time_pattern minutes : / 1 condition : [] action : - service : rest_command . pixel_aussentemperatur mode : single Anwendungsbeispiele \u00b6 Waschmaschine fertig Trockner fertig Nachricht bei T\u00fcrklingeln","title":"PixelClock, smarte LED Matrix"},{"location":"projekte/pixelclock/#pixelclock-smarte-led-matrix","text":"Die PixelClock zeigt im Standard die Uhrzeit und Datum an (per NTP bezogen). Per MQTT bzw. API Schnittstellen k\u00f6nnen aber auch sogenannte Screens mit Text und Icons angezeigt werden. Ein Helligkeitssensor regelt die Helligkeit der Anzeige je nach Lichtst\u00e4rke im Raum. Basierend ist diese Anzeige auf dem Projekt PixelIT , das Geh\u00e4use ist mit dem 3D-Drucker gedruckt.","title":"PixelClock, smarte LED Matrix"},{"location":"projekte/pixelclock/#benotigtes-material","text":"3D-Drucker f\u00fcr das Geh\u00e4use Wemos D1 Mini WS2812 8x32 Matrix (optional) Helligkeitssensor, z.B. LDR GL5516 Ein 1000\u00b5F Kondensator f\u00fcr Stabilisierung (geht evtl. auch ohne) weiteres Infos zur Hardware und Software beim Projekt: bei Github Doku Seite Geh\u00e4use zum Drucken: Geh\u00e4use bei Thingiverse anderes Geh\u00e4use : Dieses ist das auf den Fotos sichtbare Geh\u00e4use. Nachteil beim Geh\u00e4use ist, dass der Stromanschlu\u00df auf der Unterseite ist. Ich habe die STL-Dateien ge\u00e4ndert, so dass der Stromanschlu\u00df seitlich wie auf den Fotos ist. Als Diffusor nutze ich einfach ein Blatt Papier F\u00fcr die T\u00f6nung nutze ich eine Acrylglasplatte, z.B. hier","title":"Ben\u00f6tigtes Material"},{"location":"projekte/pixelclock/#ansteuerung-uber-home-assistant","text":"Das Pixel It Projekt nutzt Node-Red f\u00fcr die Anzeige von Wetterdaten/sonstigen Zust\u00e4nden aus einer Heimautomatisierungsl\u00f6sung wie Home Assistant. Da dies bisher nicht im Einsatz ist, wurde die Ansteuerung \u00fcber native Services/Automatisierungen in Home Assistant realisiert. D.h. zuerst wird ein REST-Call definiert (was soll auf der Uhr angezeigt werden) und dann per Automatisierung wird dieser Service dann getriggert (z.B. alle Minute die Temperatur anzeigen).","title":"Ansteuerung \u00fcber Home Assistant"},{"location":"projekte/pixelclock/#definiton-der-services","text":"Die Services definieren des REST-API-Call zur Pixel IT Clock, z.B. zeige die Au\u00dfentemperatur mit Icon f\u00fcr Thermomether an. Diese Services k\u00f6nnen dann per Automatisierung getriggert werden. In der Pixel IT Webobefl\u00e4che kann man die API-Calls erst testen, auch die Icons k\u00f6nnen dort sehr einfach ausgew\u00e4hlt werden. Die Doku zur API befindet sich hier 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 rest_command : pixel_aussentemperatur : url : http : //< ip der uhr >/ api / screen method : POST headers : accept : \"application/json, text/html\" payload : '{ \"switchAnimation\" : { \"aktiv\" : true , \"animation\" : \"fade\" }, \"bitmap\" : { \"data\" : [ 0 , 65535 , 65535 , 65535 , 0 , 65535 , 65535 , 0 , 0 , 65535 , 0 , 65535 , 0 , 65535 , 0 , 0 , 0 , 65535 , 63488 , 65535 , 0 , 65535 , 65535 , 0 , 0 , 65535 , 63488 , 65535 , 0 , 0 , 0 , 0 , 0 , 65535 , 63488 , 65535 , 0 , 0 , 0 , 0 , 65535 , 63488 , 63488 , 63488 , 65535 , 0 , 0 , 0 , 65535 , 63488 , 63488 , 63488 , 65535 , 0 , 0 , 0 , 0 , 65535 , 65535 , 65535 , 0 , 0 , 0 , 0 ], \"position\" : { \"x\" : 0 , \"y\" : 0 }, \"size\" : { \"width\" : 8 , \"height\" : 8 } }, \"text\" : { \"textString\" : \"{{ states.sensor.aussentemperatur.state | round(1) }}\u00b0\" , \"bigFont\" : false , \"scrollText\" : false , \"scrollTextDelay\" : 0 , \"centerText\" : true , \"position\" : { \"x\" : 7 , \"y\" : 1 }, \"hexColor\" : \"#ffffff\" } } ' content_type : 'application/json; charset=utf-8'","title":"Definiton der Services"},{"location":"projekte/pixelclock/#automatisierung","text":"Hier wird jede Minute der zuvor erstellte Service getriggert um die Temperatur auf der Uhr anzuzeigen. 1 2 3 4 5 6 7 8 9 alias : Pixel IT Aussentemperatur anzeigen description : '' trigger : - platform : time_pattern minutes : / 1 condition : [] action : - service : rest_command . pixel_aussentemperatur mode : single","title":"Automatisierung"},{"location":"projekte/pixelclock/#anwendungsbeispiele","text":"Waschmaschine fertig Trockner fertig Nachricht bei T\u00fcrklingeln","title":"Anwendungsbeispiele"},{"location":"projekte/sidewinder-x1-led-2/","text":"Artillery Sidewinder X1 LED Statusbeleuchtung \u00b6 Damit beim 3D-Druck auch besser zu sehen ist was gedruckt wird, macht eine Beleuchtung der Druckplatte Sinn. Ist fast schon ein klassisches Upgrade f\u00fcr jeden 3D-Drucker. Hier wird ein Artillery Sidewinder X1 mit einem SK6812-LED-Streifen (insgesamt 18 LEDs) versehen. Strom bekommt der Streifen vom internen 24V-Netzteil des Sidewinders \u00fcber einen Step-Down Converter der aus den 24V passende 5V macht. Dieser ist auch im Geh\u00e4use des Sidewinders untergebracht, sodass hier nicht viel von au\u00dfen zu sehen ist. Die Kabelf\u00fchrung zum LED-Streifen geschieht \u00fcber die rechte Z-Achse. Dort hinein wird das Kabel gelegt und mit einer gedruckten Abdeckung verblendet. Die Ansteuerung des LED-Streifens zur Anzeige von Druckstatus/Fortschritt erfolgt \u00fcber einen Raspberry Pi 4 mit Octoprint und dem Plugin \"WS281x LED Status\". Achtung! Im Geh\u00e4use sind 230V Netzspannung anliegend. Wer hier keine Ahnung hat, besser die Finger davon lassen. Auf jeden Fall den Drucker vom Stromnetz trennen! ben\u00f6tigtes Werkzeug \u00b6 Schraubenzieher L\u00f6tkolben Schrumpfschlauch Aderendh\u00fclsen und Wago-Klemmen sind hilfreich bzw. empfohlen Multimeter ben\u00f6tigte Hardware/Teile zum Drucken \u00b6 WS2812/SK6812 LED-Streifen Step-Down Buck Converter, z.B. LM2596 Kabel f\u00fcr Anschlu\u00df LED-Streifen + Step Down Converter Abdeckschienen f\u00fcr das Kabel zum LED-Streifen zu verstecken gibt es bei Thingiverse zum drucken Geh\u00e4use f\u00fcr den Step-Down Converter bei Thingiverse Thingiverse f\u00fcr eine Steckverbindung zw. LED-Streifen und den im Sidewinder befindlichen Teilen benutze ich noch 3-Polige Schnellverbinder f\u00fcr LED-Streifen Plugin f\u00fcr Octoprint \u00b6 OctoPrint WS281x LED Status Aufbau \u00b6 Sidewinder \u00f6ffnen um an die Innereien zu kommen \u00b6 Stecker aus dem Netzteil! Die kleinen Schrauben an der Bodenplatte l\u00f6sen, Achtung die Garantie erlischt ab dem Moment! Beim Abnehmen der Bodenplatte muss noch der L\u00fcfter vom Mainboard abgezogen werden Buck-Converter an Netzteil des Sidewinders anschlie\u00dfen \u00b6 Achtung: 230V am Netzteil! Stecker raus! Am Netzteil sind noch jeweils 1 Klemme f\u00fcr V+ und V- (24V) frei. Hier kann der Spannungswandler angeschlossen werden. Vorher muss dieser nat\u00fcrlich entsprechend mit Kabeln angel\u00f6tet werden Der Converter ist hier im Foto in einem kleinen Geh\u00e4use drin Einstellen der Ausgangsspannung \u00b6 Der Buck-Converter hat eine kleine Schraube an der die Ausgangsspannung eingestellt werden kann. Diese mit einem Multimeter auf ca. 5V f\u00fcr den LED-Streifen einstellen Achtung: Hierzu m\u00fcsst ihr das Netzteil unter Strom setzen. Achtung: keine Teile anfassen! Verkabelung \u00b6 Der LED-Streifen wird mit einem 3-poligen Stecker auf eine 3-Polige Buchse an der rechten Z-Achse angeschlossen. Vom Raspberry Pi f\u00fchren noch 2 Jumper Kabel von den GPIOs ins Innere um ein gemeinsames GND f\u00fcr den LED-Streifen zu haben und f\u00fcr die Steuerleitung der LEDs. Im Sidewinder sind die einzelnen Kabel f\u00fcr V+, V- und D (Steuerung) dann per Wago Klemmen zusammengeschaltet. Einstellen des Octoprint Plugins \u00b6 Dazu gibt es die Doku beim Plugin. Hier wird auch noch die Verkabelung genauer erl\u00e4utert: Plugin Doku","title":"Artillery Sidewinder X1 LED Statusbeleuchtung"},{"location":"projekte/sidewinder-x1-led-2/#artillery-sidewinder-x1-led-statusbeleuchtung","text":"Damit beim 3D-Druck auch besser zu sehen ist was gedruckt wird, macht eine Beleuchtung der Druckplatte Sinn. Ist fast schon ein klassisches Upgrade f\u00fcr jeden 3D-Drucker. Hier wird ein Artillery Sidewinder X1 mit einem SK6812-LED-Streifen (insgesamt 18 LEDs) versehen. Strom bekommt der Streifen vom internen 24V-Netzteil des Sidewinders \u00fcber einen Step-Down Converter der aus den 24V passende 5V macht. Dieser ist auch im Geh\u00e4use des Sidewinders untergebracht, sodass hier nicht viel von au\u00dfen zu sehen ist. Die Kabelf\u00fchrung zum LED-Streifen geschieht \u00fcber die rechte Z-Achse. Dort hinein wird das Kabel gelegt und mit einer gedruckten Abdeckung verblendet. Die Ansteuerung des LED-Streifens zur Anzeige von Druckstatus/Fortschritt erfolgt \u00fcber einen Raspberry Pi 4 mit Octoprint und dem Plugin \"WS281x LED Status\". Achtung! Im Geh\u00e4use sind 230V Netzspannung anliegend. Wer hier keine Ahnung hat, besser die Finger davon lassen. Auf jeden Fall den Drucker vom Stromnetz trennen!","title":"Artillery Sidewinder X1 LED Statusbeleuchtung"},{"location":"projekte/sidewinder-x1-led-2/#benotigtes-werkzeug","text":"Schraubenzieher L\u00f6tkolben Schrumpfschlauch Aderendh\u00fclsen und Wago-Klemmen sind hilfreich bzw. empfohlen Multimeter","title":"ben\u00f6tigtes Werkzeug"},{"location":"projekte/sidewinder-x1-led-2/#benotigte-hardwareteile-zum-drucken","text":"WS2812/SK6812 LED-Streifen Step-Down Buck Converter, z.B. LM2596 Kabel f\u00fcr Anschlu\u00df LED-Streifen + Step Down Converter Abdeckschienen f\u00fcr das Kabel zum LED-Streifen zu verstecken gibt es bei Thingiverse zum drucken Geh\u00e4use f\u00fcr den Step-Down Converter bei Thingiverse Thingiverse f\u00fcr eine Steckverbindung zw. LED-Streifen und den im Sidewinder befindlichen Teilen benutze ich noch 3-Polige Schnellverbinder f\u00fcr LED-Streifen","title":"ben\u00f6tigte Hardware/Teile zum Drucken"},{"location":"projekte/sidewinder-x1-led-2/#plugin-fur-octoprint","text":"OctoPrint WS281x LED Status","title":"Plugin f\u00fcr Octoprint"},{"location":"projekte/sidewinder-x1-led-2/#aufbau","text":"","title":"Aufbau"},{"location":"projekte/sidewinder-x1-led-2/#sidewinder-offnen-um-an-die-innereien-zu-kommen","text":"Stecker aus dem Netzteil! Die kleinen Schrauben an der Bodenplatte l\u00f6sen, Achtung die Garantie erlischt ab dem Moment! Beim Abnehmen der Bodenplatte muss noch der L\u00fcfter vom Mainboard abgezogen werden","title":"Sidewinder \u00f6ffnen um an die Innereien zu kommen"},{"location":"projekte/sidewinder-x1-led-2/#buck-converter-an-netzteil-des-sidewinders-anschlieen","text":"Achtung: 230V am Netzteil! Stecker raus! Am Netzteil sind noch jeweils 1 Klemme f\u00fcr V+ und V- (24V) frei. Hier kann der Spannungswandler angeschlossen werden. Vorher muss dieser nat\u00fcrlich entsprechend mit Kabeln angel\u00f6tet werden Der Converter ist hier im Foto in einem kleinen Geh\u00e4use drin","title":"Buck-Converter an Netzteil des Sidewinders anschlie\u00dfen"},{"location":"projekte/sidewinder-x1-led-2/#einstellen-der-ausgangsspannung","text":"Der Buck-Converter hat eine kleine Schraube an der die Ausgangsspannung eingestellt werden kann. Diese mit einem Multimeter auf ca. 5V f\u00fcr den LED-Streifen einstellen Achtung: Hierzu m\u00fcsst ihr das Netzteil unter Strom setzen. Achtung: keine Teile anfassen!","title":"Einstellen der Ausgangsspannung"},{"location":"projekte/sidewinder-x1-led-2/#verkabelung","text":"Der LED-Streifen wird mit einem 3-poligen Stecker auf eine 3-Polige Buchse an der rechten Z-Achse angeschlossen. Vom Raspberry Pi f\u00fchren noch 2 Jumper Kabel von den GPIOs ins Innere um ein gemeinsames GND f\u00fcr den LED-Streifen zu haben und f\u00fcr die Steuerleitung der LEDs. Im Sidewinder sind die einzelnen Kabel f\u00fcr V+, V- und D (Steuerung) dann per Wago Klemmen zusammengeschaltet.","title":"Verkabelung"},{"location":"projekte/sidewinder-x1-led-2/#einstellen-des-octoprint-plugins","text":"Dazu gibt es die Doku beim Plugin. Hier wird auch noch die Verkabelung genauer erl\u00e4utert: Plugin Doku","title":"Einstellen des Octoprint Plugins"},{"location":"projekte/solvis-heizung/","text":"Solvis Heizung via Modbus auslesen und steuern \u00b6 Eine Solvis Heizungsanlage , hier SolvisMax, l\u00e4sst sich mit Hilfe der optional erh\u00e4ltlichen Solvis Remote fernsteuern. Die Solvis Remote bildet im Prinzip das Touchdisplay der Heizung 1:1 via Browser nach. Zus\u00e4tzlich gibt es Graphen \u00fcber den Temperaturverlauf der einzelnen Sensoren des Schichtenspeichers und die M\u00f6glichkeit, sich ein Anlagenschema darzustellen. F\u00fcr eine Integration ein ein bestehendes Smart Home System, hier Home Assistant , bietet die Solvis Remote zus\u00e4tzlich die M\u00f6glichkeit die Heizung mittels Modbus-TCP Protokoll lokal auslesen und, falls gew\u00fcnscht, auch steuern zu k\u00f6nnen. Vorbildlich ist die Bereitstellung aller Dokumentationen inkl. Modbus Register von Solvis auf deren Webseite. ben\u00f6tigte Hardware \u00b6 Solvis Heizung, hier SolvisMax 7 Solvis Control 2 (SC2) Solvis Remote zur Anbindung ans Netzwerk und Bereitstellung des Modbus-TCP Protokolls Home Assistant \u00dcbersicht \u00b6 In Home Assistant wurde die Ansicht der Anlage auf der Solvis Remote nachgebildet Zus\u00e4tzlich gibt es eine Detail-Ansicht der einzelnen Sensoren und Stati. Klick auf die einzelnen Sensoren bringen die Historie des Sensors bzw. die Auswahlm\u00f6glichkeiten zur Steuerung, z.b. den HKR1-Betriebsmodus zu \u00e4ndern Langzeitauswertung mit Grafana/InfluxDB \u00b6 F\u00fcr Langzeitstatistiken werden die Daten von Home Assistant in einer InfluxDB Datenbank gespeichert und mittels Grafana visualisiert. F\u00fcr die monatliche Auswertung der Brennerstarts und Laufzeit des Brenners werden mit folgenden Queries die Daten ermittelt: 1 2 3 SELECT spread(\"value\") FROM \"Starts\" WHERE (\"entity_id\" = 'brennerstarts') AND time > now() - 365d GROUP BY time(30d) fill(null) SELECT spread(\"value\") FROM \"h\" WHERE (\"entity_id\" = 'laufzeit_brenner') AND time > now() - 365d GROUP BY time(30d) fill(null) Aktivierung Modbus Protokoll \u00b6 Zur Aktivierung von Modbus TCP muss in das Installateurmen\u00fc gewechselt werden. Den zugeh\u00f6rigen Code werde ich nicht ver\u00f6ffentlichen. Bitte mit dem Installateur der Heizung Kontakt aufnehmen. Im Men\u00fcpunkt Sonstiges --> Remote ausw\u00e4hlen und dort dann den Modus f\u00fcr Modbus TCP auf lesen oder auch senden (schreiben) einstellen. Sollten die Einstellungen korrekt sein sollte unter der IP-Addresse der Solvis-Remote auf Port TCP/502 ein Connect m\u00f6glich sein. Auszug configuration.yaml \u00b6 Nachfolgend ein Auszug der configuration.yaml von Home Assistant mit den wichtigsten Sensoren und Templatesmodbus: - name: SolvisRemote type: tcp host: <ip der solvis remote> port: 502 sensors: - name: Warmwasserpuffer unit_of_measurement: \u00b0C scale: 0.1 slave: 1 precision: 2 input_type: input address: 33024 scan_interval: 30 - name: Warmwassertemperatur unit_of_measurement: \u00b0C scale: 0.1 slave: 1 precision: 2 input_type: input address: 33025 scan_interval: 30 - name: Speicherreferenztemperatur unit_of_measurement: \u00b0C scale: 0.1 slave: 1 precision: 2 input_type: input address: 33026 scan_interval: 30 - name: Heizungspuffertemperatur oben unit_of_measurement: \u00b0C scale: 0.1 slave: 1 precision: 2 input_type: input address: 33027 scan_interval: 30 - name: Aussentemperatur unit_of_measurement: \u00b0C scale: 0.1 slave: 1 precision: 2 input_type: input address: 33033 scan_interval: 30 - name: Heizungspuffertemperatur unten unit_of_measurement: \u00b0C scale: 0.1 slave: 1 precision: 2 input_type: input address: 33032 scan_interval: 30 - name: Zirkulationsdurchfluss unit_of_measurement: \u00b0C scale: 0.1 slave: 1 precision: 2 input_type: input address: 33034 scan_interval: 30 - name: Vorlauftemperatur unit_of_measurement: \u00b0C scale: 0.1 slave: 1 precision: 2 input_type: input address: 33035 scan_interval: 30 - name: Kaltwassertemperatur unit_of_measurement: \u00b0C scale: 0.1 slave: 1 precision: 2 input_type: input address: 33038 scan_interval: 30 - name: Durchfluss Warmwasserzirkualation unit_of_measurement: l/min slave: 1 precision: 2 scale: 0.1 input_type: input address: 33041 scan_interval: 30 - name: Laufzeit Brenner unit_of_measurement: h slave: 1 precision: 0 input_type: input address: 33536 scan_interval: 30 - name: Brennerstarts unit_of_measurement: Starts slave: 1 precision: 0 input_type: input address: 33537 scan_interval: 30 - name: Brennerleistung unit_of_measurement: kW scale: 0.1 slave: 1 precision: 2 input_type: input address: 33539 scan_interval: 30 - name: Ionisationsstrom unit_of_measurement: mA slave: 1 scale: 0.1 precision: 1 input_type: input address: 33540 scan_interval: 30 - name: A01.Pumpe Zirkulation slave: 1 unit_of_measurement: V scale: 0.01 precision: 0 input_type: input address: 33280 scan_interval: 30 - name: A02.Pumpe Warmwasser slave: 1 unit_of_measurement: V scale: 0.01 precision: 0 input_type: input address: 33281 scan_interval: 30 - name: A03.Pumpe HK1 slave: 1 unit_of_measurement: V scale: 0.01 precision: 0 input_type: input address: 33282 scan_interval: 30 - name: A05.Pumpe Zirkulation slave: 1 unit_of_measurement: V scale: 0.01 precision: 0 input_type: input address: 33284 scan_interval: 30 - name: A12.Brennerstatus slave: 1 unit_of_measurement: V scale: 0.01 precision: 0 input_type: input address: 33291 scan_interval: 30 - name: WW Nachheizung 2322 slave: 1 #unit_of_measurement: V #scale: 0.01 #precision: 0 input_type: holding address: 2322 scan_interval: 30 - name: HKR1 Betriebsart slave: 1 input_type: holding address: 2818 scan_interval: 30 # ab hier 300 Sekunden Poll Interval - name: HKR1 Absenktemperatur Nacht unit_of_measurement: \u00b0C slave: 1 input_type: holding address: 2821 scan_interval: 300 - name: HKR1 Solltemperatur Tag unit_of_measurement: \u00b0C slave: 1 input_type: holding address: 2820 scan_interval: 300 - name: DigIn Stoerungen slave: 1 input_type: input address: 33045 scan_interval: 300 - name: WW Solltemperatur unit_of_measurement: \u00b0C slave: 1 input_type: holding address: 2305 scan_interval: 300 - name: VersionSC2 slave: 1 scale: 0.01 precision: 2 input_type: input address: 32770 scan_interval: 300 - name: VersionNBG slave: 1 scale: 0.01 input_type: input address: 32771 scan_interval: 300 - name: ZirkulationBetriebsart slave: 1 input_type: input address: 2049 scan_interval: 300 - name: Raumtemperatur_HKR1 unit_of_measurement: \u00b0C scale: 0.1 slave: 1 input_type: holding address: 34304 scan_interval: 300 sensor: - platform: template sensors: ww_zirkulationsart: friendly_name: \"WW Zirkulation Betriebsart\" #entity_id: sensor.zirkulationbetriebsart value_template: >- {% if states ( 'sensor.zirkulationbetriebsart' ) == '1' %} Aus {% elif states ( 'sensor.zirkulationbetriebsart' ) == '2' %} Puls {% elif states ( 'sensor.zirkulationbetriebsart' ) == '3' %} Temp {% elif states ( 'sensor.zirkulationbetriebsart' ) == '4' %} Warten {% else %} unbekannt {% endif %} hkr1betriebsart: friendly_name: \"Heizkreislauf Betriebsart\" #entity_id: sensor.hkr1_betriebsart value_template: \" {% if states.sensor.hkr1_betriebsart.state == '1' %} Aus {% elif states.sensor.hkr1_betriebsart.state == '2' %} Automatik {% elif states.sensor.hkr1_betriebsart.state == '3' %} Tagbetrieb {% elif states.sensor.hkr1_betriebsart.state == '4' %} Absenkbetrieb {% elif states.sensor.hkr1_betriebsart.state == '5' %} Standby {% elif states.sensor.hkr1_betriebsart.state == '6' %} Eco {% elif states.sensor.hkr1_betriebsart.state == '7' %} Urlaub {% elif states.sensor.hkr1_betriebsart.state == '8' %} WW Vorang {% elif states.sensor.zirkulationbetriebsart.state == '9' %} Frostschutz {% elif states.sensor.zirkulationbetriebsart.state == '10' %} Pumpenschutz {% elif states.sensor.hkr1_betriebsart.state == '11' %} Estrich {% endif %} \" Raumtemperatur per Modbus-Register statt Raumbedienelement \u00b6 Normalerweise wird \u00fcber das (optionale) Raumbedienelement die Raumtemperatur an die Solvis Control2 (SC2) gemeldet. Dadurch kann die Heizung die Regelung an die erreichte Raumtemperatur anpassen. Da im Haus keine einfache Verkabelung des Raumbedienelements m\u00f6glich war, es aber ein Modbus Register 34304 (Raumtemperatur 1) gibt, war die Idee geboren die Raumtemperatur \u00fcber die in Home Assistant vorhandenen Zigbee Temperatursensoren per Modbus in das Register zu schreiben, was zun\u00e4chst fehlschlug, trotz aktiviertem schreibenden Modbus-Zugriff. Allerdings war zu dem Zeitpunkt die SC2 noch nicht f\u00fcr ein Raumbedienelement eingerichtet. Nach Kontaktaufnahme mit Solvis bekam ich die Infos dir mir fehlten. Vielen Dank hierf\u00fcr an Wolf Walter Voraussetzungen \u00b6 Solvis Control muss mit Raumbedienelement f\u00fcr den Heizkreislauf konfiguriert sein (auch wenn kein Raumbedienelement per Kabel angeschlossen wird) daf\u00fcr ist ein Zur\u00fccksetzen der Solvis Control auf Werkseinstellung n\u00f6tig, da in der Initialisierung das Raumbedienelement zum Heizkreislauf zugeordnet wird Anschlie\u00dfend muss im Installateur-Men\u00fc unter Sonstiges --> Remote --> Seite 3 --> Raumf\u00fchler HK1 auf Modbus umgestellt werden und der Modbus-Modus muss auf senden was dem schreibenden Zugriff entspricht umgestellt werden, falls noch nicht geschehen Hinweis Die Temperatur muss ca. alle 60 Sekunden per Modbus in das Register geschrieben werden, sonst \"verschwindet\" die Temperatur in der Anzeige und zeigt nur noch \"--\" zyklisches setzen der Raumtemperatur in Home Assistant \u00b6 Eine Automatisierung schreibt den Sensorwert eines Zigbee Temperatursensors alle 30 Sekunden in das Modbus Register. Dazu muss der Wert des Sensors konvertiert werden, da das Modbus-Register den Wert in 0.1\u00b0C skaliert erwartet. Zudem muss der Wert in ein int gewandelt werden da der modbus.write_register -Service ein int erwartet. Automatisierung \u00b6 1 2 3 4 5 6 7 8 9 10 11 - alias: Heizung Raumtemperatur per Modbus aktualisieren trigger: platform: time_pattern seconds: \"/30\" action: - service: modbus.write_register data_template: address: 34304 hub: SolvisRemote unit: 1 value: \" {{ ( states ( 'sensor.temperatur_wohnzimmer' ) | float * 10 ) | int }} \" Raumtemperaturanzeige in der SC2 \u00b6 Bei erfolgreichem setzen der Temperatur erscheint diese in der Solvis Control Stundenweises umschalten von Automatik auf Standby-Betrieb \u00b6 Gerade in der \u00dcbergangszeit kann es vorkommen, dass an sonnigen Tagen trotz noch k\u00fchler Au\u00dfentemperatur es in den Zimmern durch die Sonneneinstrahlung bereits warm ist. Die Heizung aber noch wegen der k\u00fchlen Au\u00dfentemperatur weiterhin l\u00e4uft bis auch die Au\u00dfentemperatur entsprechend sp\u00e4ter am Tag steigt. Hier w\u00e4re ein Nutzungsszenario f\u00fcr folgende Automatisierung: Schalte den Heizkreis auf Standby-Modus f\u00fcr x-Stunden (z.B. bis Abends). Realisiert ist dies \u00fcber einen timer in Home-Assistant, dessen Zeitwert (Stunden) per input_number gesetzt wird (Schieberegler im Frontend). \u00dcber ein input_boolean (Ein-/Ausschalter im Frontend) wird dann eine Automatisierung ausgef\u00fchrt, die den Timer startet ( service: timer.start ) und das Modbus Register 2818 auf den Wert 5 (HKR1 Standbymodus) schreibt. Wenn der Timer abgelaufen ist, startet eine zweite Automatisierung (getriggert durch event_type: timer.finished ) die dann den Ein-/Ausschalter wieder auf \"Aus\" setzt. Durch das setzen des Ein-Ausschalters auf \"Aus\" durch diese Automatisierung wird wiederum eine weitere Automatisierung getriggert die dann zum Einen das Modbus-Register 2818 wieder auf 2 (Automatik) setzt, also den Heizkreis wieder in den normalen Automatikmodus versetzt. Der zweite Anwendungsfall ist das manuelle Umschalten des Ein-/Ausschalters in der Weboberfl\u00e4che auf \"Aus\" um wieder manuell auf \"Automatik\" umzuschalten. Auch hier triggert diese Automatisierung. Konfiguration Home-Assistant \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 # Eingabefelder input_number: delayheizungstandby: name: Stunden auf Standby initial: 5 min: 1 max: 8 step: 1 icon: mdi:timer input_boolean: heizungstandbyon: name: Heizung stundenweise auf Standby initial: off # Timer for setting heating on standby for x hours timer: heizungaufstandbyfor: name: Noch auf Standby f\u00fcr automation: - alias: Heizung auf Standby Start trigger: platform: state entity_id: input_boolean.heizungstandbyon to: 'on' action: - service: timer.start entity_id: timer.heizungaufstandbyfor data_template: duration: \" {{ states ( 'input_number.delayheizungstandby' ) | int * 60 * 60 }} \" - service: modbus.write_register data: address: 2818 hub: SolvisRemote unit: 1 value: 5 - alias: Heizung Standby To Automatic trigger: platform: state entity_id: input_boolean.heizungstandbyon to: 'off' action: - service: timer.cancel entity_id: timer.heizungaufstandbyfor - service: modbus.write_register data: address: 2818 hub: SolvisRemote unit: 1 value: 2 - alias: Heizung Standby Timer Finished trigger: platform: event event_type: timer.finished event_data: entity_id: timer.heizungaufstandbyfor action: - service: input_boolean.turn_off data: entity_id: input_boolean.heizungstandbyon Links zu Solvis Doku \u00b6 Doku: Solvis Modbus Register","title":"Solvis Heizung via Modbus auslesen und steuern"},{"location":"projekte/solvis-heizung/#solvis-heizung-via-modbus-auslesen-und-steuern","text":"Eine Solvis Heizungsanlage , hier SolvisMax, l\u00e4sst sich mit Hilfe der optional erh\u00e4ltlichen Solvis Remote fernsteuern. Die Solvis Remote bildet im Prinzip das Touchdisplay der Heizung 1:1 via Browser nach. Zus\u00e4tzlich gibt es Graphen \u00fcber den Temperaturverlauf der einzelnen Sensoren des Schichtenspeichers und die M\u00f6glichkeit, sich ein Anlagenschema darzustellen. F\u00fcr eine Integration ein ein bestehendes Smart Home System, hier Home Assistant , bietet die Solvis Remote zus\u00e4tzlich die M\u00f6glichkeit die Heizung mittels Modbus-TCP Protokoll lokal auslesen und, falls gew\u00fcnscht, auch steuern zu k\u00f6nnen. Vorbildlich ist die Bereitstellung aller Dokumentationen inkl. Modbus Register von Solvis auf deren Webseite.","title":"Solvis Heizung via Modbus auslesen und steuern"},{"location":"projekte/solvis-heizung/#benotigte-hardware","text":"Solvis Heizung, hier SolvisMax 7 Solvis Control 2 (SC2) Solvis Remote zur Anbindung ans Netzwerk und Bereitstellung des Modbus-TCP Protokolls","title":"ben\u00f6tigte Hardware"},{"location":"projekte/solvis-heizung/#home-assistant-ubersicht","text":"In Home Assistant wurde die Ansicht der Anlage auf der Solvis Remote nachgebildet Zus\u00e4tzlich gibt es eine Detail-Ansicht der einzelnen Sensoren und Stati. Klick auf die einzelnen Sensoren bringen die Historie des Sensors bzw. die Auswahlm\u00f6glichkeiten zur Steuerung, z.b. den HKR1-Betriebsmodus zu \u00e4ndern","title":"Home Assistant \u00dcbersicht"},{"location":"projekte/solvis-heizung/#langzeitauswertung-mit-grafanainfluxdb","text":"F\u00fcr Langzeitstatistiken werden die Daten von Home Assistant in einer InfluxDB Datenbank gespeichert und mittels Grafana visualisiert. F\u00fcr die monatliche Auswertung der Brennerstarts und Laufzeit des Brenners werden mit folgenden Queries die Daten ermittelt: 1 2 3 SELECT spread(\"value\") FROM \"Starts\" WHERE (\"entity_id\" = 'brennerstarts') AND time > now() - 365d GROUP BY time(30d) fill(null) SELECT spread(\"value\") FROM \"h\" WHERE (\"entity_id\" = 'laufzeit_brenner') AND time > now() - 365d GROUP BY time(30d) fill(null)","title":"Langzeitauswertung mit Grafana/InfluxDB"},{"location":"projekte/solvis-heizung/#aktivierung-modbus-protokoll","text":"Zur Aktivierung von Modbus TCP muss in das Installateurmen\u00fc gewechselt werden. Den zugeh\u00f6rigen Code werde ich nicht ver\u00f6ffentlichen. Bitte mit dem Installateur der Heizung Kontakt aufnehmen. Im Men\u00fcpunkt Sonstiges --> Remote ausw\u00e4hlen und dort dann den Modus f\u00fcr Modbus TCP auf lesen oder auch senden (schreiben) einstellen. Sollten die Einstellungen korrekt sein sollte unter der IP-Addresse der Solvis-Remote auf Port TCP/502 ein Connect m\u00f6glich sein.","title":"Aktivierung Modbus Protokoll"},{"location":"projekte/solvis-heizung/#auszug-configurationyaml","text":"Nachfolgend ein Auszug der configuration.yaml von Home Assistant mit den wichtigsten Sensoren und Templatesmodbus: - name: SolvisRemote type: tcp host: <ip der solvis remote> port: 502 sensors: - name: Warmwasserpuffer unit_of_measurement: \u00b0C scale: 0.1 slave: 1 precision: 2 input_type: input address: 33024 scan_interval: 30 - name: Warmwassertemperatur unit_of_measurement: \u00b0C scale: 0.1 slave: 1 precision: 2 input_type: input address: 33025 scan_interval: 30 - name: Speicherreferenztemperatur unit_of_measurement: \u00b0C scale: 0.1 slave: 1 precision: 2 input_type: input address: 33026 scan_interval: 30 - name: Heizungspuffertemperatur oben unit_of_measurement: \u00b0C scale: 0.1 slave: 1 precision: 2 input_type: input address: 33027 scan_interval: 30 - name: Aussentemperatur unit_of_measurement: \u00b0C scale: 0.1 slave: 1 precision: 2 input_type: input address: 33033 scan_interval: 30 - name: Heizungspuffertemperatur unten unit_of_measurement: \u00b0C scale: 0.1 slave: 1 precision: 2 input_type: input address: 33032 scan_interval: 30 - name: Zirkulationsdurchfluss unit_of_measurement: \u00b0C scale: 0.1 slave: 1 precision: 2 input_type: input address: 33034 scan_interval: 30 - name: Vorlauftemperatur unit_of_measurement: \u00b0C scale: 0.1 slave: 1 precision: 2 input_type: input address: 33035 scan_interval: 30 - name: Kaltwassertemperatur unit_of_measurement: \u00b0C scale: 0.1 slave: 1 precision: 2 input_type: input address: 33038 scan_interval: 30 - name: Durchfluss Warmwasserzirkualation unit_of_measurement: l/min slave: 1 precision: 2 scale: 0.1 input_type: input address: 33041 scan_interval: 30 - name: Laufzeit Brenner unit_of_measurement: h slave: 1 precision: 0 input_type: input address: 33536 scan_interval: 30 - name: Brennerstarts unit_of_measurement: Starts slave: 1 precision: 0 input_type: input address: 33537 scan_interval: 30 - name: Brennerleistung unit_of_measurement: kW scale: 0.1 slave: 1 precision: 2 input_type: input address: 33539 scan_interval: 30 - name: Ionisationsstrom unit_of_measurement: mA slave: 1 scale: 0.1 precision: 1 input_type: input address: 33540 scan_interval: 30 - name: A01.Pumpe Zirkulation slave: 1 unit_of_measurement: V scale: 0.01 precision: 0 input_type: input address: 33280 scan_interval: 30 - name: A02.Pumpe Warmwasser slave: 1 unit_of_measurement: V scale: 0.01 precision: 0 input_type: input address: 33281 scan_interval: 30 - name: A03.Pumpe HK1 slave: 1 unit_of_measurement: V scale: 0.01 precision: 0 input_type: input address: 33282 scan_interval: 30 - name: A05.Pumpe Zirkulation slave: 1 unit_of_measurement: V scale: 0.01 precision: 0 input_type: input address: 33284 scan_interval: 30 - name: A12.Brennerstatus slave: 1 unit_of_measurement: V scale: 0.01 precision: 0 input_type: input address: 33291 scan_interval: 30 - name: WW Nachheizung 2322 slave: 1 #unit_of_measurement: V #scale: 0.01 #precision: 0 input_type: holding address: 2322 scan_interval: 30 - name: HKR1 Betriebsart slave: 1 input_type: holding address: 2818 scan_interval: 30 # ab hier 300 Sekunden Poll Interval - name: HKR1 Absenktemperatur Nacht unit_of_measurement: \u00b0C slave: 1 input_type: holding address: 2821 scan_interval: 300 - name: HKR1 Solltemperatur Tag unit_of_measurement: \u00b0C slave: 1 input_type: holding address: 2820 scan_interval: 300 - name: DigIn Stoerungen slave: 1 input_type: input address: 33045 scan_interval: 300 - name: WW Solltemperatur unit_of_measurement: \u00b0C slave: 1 input_type: holding address: 2305 scan_interval: 300 - name: VersionSC2 slave: 1 scale: 0.01 precision: 2 input_type: input address: 32770 scan_interval: 300 - name: VersionNBG slave: 1 scale: 0.01 input_type: input address: 32771 scan_interval: 300 - name: ZirkulationBetriebsart slave: 1 input_type: input address: 2049 scan_interval: 300 - name: Raumtemperatur_HKR1 unit_of_measurement: \u00b0C scale: 0.1 slave: 1 input_type: holding address: 34304 scan_interval: 300 sensor: - platform: template sensors: ww_zirkulationsart: friendly_name: \"WW Zirkulation Betriebsart\" #entity_id: sensor.zirkulationbetriebsart value_template: >- {% if states ( 'sensor.zirkulationbetriebsart' ) == '1' %} Aus {% elif states ( 'sensor.zirkulationbetriebsart' ) == '2' %} Puls {% elif states ( 'sensor.zirkulationbetriebsart' ) == '3' %} Temp {% elif states ( 'sensor.zirkulationbetriebsart' ) == '4' %} Warten {% else %} unbekannt {% endif %} hkr1betriebsart: friendly_name: \"Heizkreislauf Betriebsart\" #entity_id: sensor.hkr1_betriebsart value_template: \" {% if states.sensor.hkr1_betriebsart.state == '1' %} Aus {% elif states.sensor.hkr1_betriebsart.state == '2' %} Automatik {% elif states.sensor.hkr1_betriebsart.state == '3' %} Tagbetrieb {% elif states.sensor.hkr1_betriebsart.state == '4' %} Absenkbetrieb {% elif states.sensor.hkr1_betriebsart.state == '5' %} Standby {% elif states.sensor.hkr1_betriebsart.state == '6' %} Eco {% elif states.sensor.hkr1_betriebsart.state == '7' %} Urlaub {% elif states.sensor.hkr1_betriebsart.state == '8' %} WW Vorang {% elif states.sensor.zirkulationbetriebsart.state == '9' %} Frostschutz {% elif states.sensor.zirkulationbetriebsart.state == '10' %} Pumpenschutz {% elif states.sensor.hkr1_betriebsart.state == '11' %} Estrich {% endif %} \"","title":"Auszug configuration.yaml"},{"location":"projekte/solvis-heizung/#raumtemperatur-per-modbus-register-statt-raumbedienelement","text":"Normalerweise wird \u00fcber das (optionale) Raumbedienelement die Raumtemperatur an die Solvis Control2 (SC2) gemeldet. Dadurch kann die Heizung die Regelung an die erreichte Raumtemperatur anpassen. Da im Haus keine einfache Verkabelung des Raumbedienelements m\u00f6glich war, es aber ein Modbus Register 34304 (Raumtemperatur 1) gibt, war die Idee geboren die Raumtemperatur \u00fcber die in Home Assistant vorhandenen Zigbee Temperatursensoren per Modbus in das Register zu schreiben, was zun\u00e4chst fehlschlug, trotz aktiviertem schreibenden Modbus-Zugriff. Allerdings war zu dem Zeitpunkt die SC2 noch nicht f\u00fcr ein Raumbedienelement eingerichtet. Nach Kontaktaufnahme mit Solvis bekam ich die Infos dir mir fehlten. Vielen Dank hierf\u00fcr an Wolf Walter","title":"Raumtemperatur per Modbus-Register statt Raumbedienelement"},{"location":"projekte/solvis-heizung/#voraussetzungen","text":"Solvis Control muss mit Raumbedienelement f\u00fcr den Heizkreislauf konfiguriert sein (auch wenn kein Raumbedienelement per Kabel angeschlossen wird) daf\u00fcr ist ein Zur\u00fccksetzen der Solvis Control auf Werkseinstellung n\u00f6tig, da in der Initialisierung das Raumbedienelement zum Heizkreislauf zugeordnet wird Anschlie\u00dfend muss im Installateur-Men\u00fc unter Sonstiges --> Remote --> Seite 3 --> Raumf\u00fchler HK1 auf Modbus umgestellt werden und der Modbus-Modus muss auf senden was dem schreibenden Zugriff entspricht umgestellt werden, falls noch nicht geschehen Hinweis Die Temperatur muss ca. alle 60 Sekunden per Modbus in das Register geschrieben werden, sonst \"verschwindet\" die Temperatur in der Anzeige und zeigt nur noch \"--\"","title":"Voraussetzungen"},{"location":"projekte/solvis-heizung/#zyklisches-setzen-der-raumtemperatur-in-home-assistant","text":"Eine Automatisierung schreibt den Sensorwert eines Zigbee Temperatursensors alle 30 Sekunden in das Modbus Register. Dazu muss der Wert des Sensors konvertiert werden, da das Modbus-Register den Wert in 0.1\u00b0C skaliert erwartet. Zudem muss der Wert in ein int gewandelt werden da der modbus.write_register -Service ein int erwartet.","title":"zyklisches setzen der Raumtemperatur in Home Assistant"},{"location":"projekte/solvis-heizung/#automatisierung","text":"1 2 3 4 5 6 7 8 9 10 11 - alias: Heizung Raumtemperatur per Modbus aktualisieren trigger: platform: time_pattern seconds: \"/30\" action: - service: modbus.write_register data_template: address: 34304 hub: SolvisRemote unit: 1 value: \" {{ ( states ( 'sensor.temperatur_wohnzimmer' ) | float * 10 ) | int }} \"","title":"Automatisierung"},{"location":"projekte/solvis-heizung/#raumtemperaturanzeige-in-der-sc2","text":"Bei erfolgreichem setzen der Temperatur erscheint diese in der Solvis Control","title":"Raumtemperaturanzeige in der SC2"},{"location":"projekte/solvis-heizung/#stundenweises-umschalten-von-automatik-auf-standby-betrieb","text":"Gerade in der \u00dcbergangszeit kann es vorkommen, dass an sonnigen Tagen trotz noch k\u00fchler Au\u00dfentemperatur es in den Zimmern durch die Sonneneinstrahlung bereits warm ist. Die Heizung aber noch wegen der k\u00fchlen Au\u00dfentemperatur weiterhin l\u00e4uft bis auch die Au\u00dfentemperatur entsprechend sp\u00e4ter am Tag steigt. Hier w\u00e4re ein Nutzungsszenario f\u00fcr folgende Automatisierung: Schalte den Heizkreis auf Standby-Modus f\u00fcr x-Stunden (z.B. bis Abends). Realisiert ist dies \u00fcber einen timer in Home-Assistant, dessen Zeitwert (Stunden) per input_number gesetzt wird (Schieberegler im Frontend). \u00dcber ein input_boolean (Ein-/Ausschalter im Frontend) wird dann eine Automatisierung ausgef\u00fchrt, die den Timer startet ( service: timer.start ) und das Modbus Register 2818 auf den Wert 5 (HKR1 Standbymodus) schreibt. Wenn der Timer abgelaufen ist, startet eine zweite Automatisierung (getriggert durch event_type: timer.finished ) die dann den Ein-/Ausschalter wieder auf \"Aus\" setzt. Durch das setzen des Ein-Ausschalters auf \"Aus\" durch diese Automatisierung wird wiederum eine weitere Automatisierung getriggert die dann zum Einen das Modbus-Register 2818 wieder auf 2 (Automatik) setzt, also den Heizkreis wieder in den normalen Automatikmodus versetzt. Der zweite Anwendungsfall ist das manuelle Umschalten des Ein-/Ausschalters in der Weboberfl\u00e4che auf \"Aus\" um wieder manuell auf \"Automatik\" umzuschalten. Auch hier triggert diese Automatisierung.","title":"Stundenweises umschalten von Automatik auf Standby-Betrieb"},{"location":"projekte/solvis-heizung/#konfiguration-home-assistant","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 # Eingabefelder input_number: delayheizungstandby: name: Stunden auf Standby initial: 5 min: 1 max: 8 step: 1 icon: mdi:timer input_boolean: heizungstandbyon: name: Heizung stundenweise auf Standby initial: off # Timer for setting heating on standby for x hours timer: heizungaufstandbyfor: name: Noch auf Standby f\u00fcr automation: - alias: Heizung auf Standby Start trigger: platform: state entity_id: input_boolean.heizungstandbyon to: 'on' action: - service: timer.start entity_id: timer.heizungaufstandbyfor data_template: duration: \" {{ states ( 'input_number.delayheizungstandby' ) | int * 60 * 60 }} \" - service: modbus.write_register data: address: 2818 hub: SolvisRemote unit: 1 value: 5 - alias: Heizung Standby To Automatic trigger: platform: state entity_id: input_boolean.heizungstandbyon to: 'off' action: - service: timer.cancel entity_id: timer.heizungaufstandbyfor - service: modbus.write_register data: address: 2818 hub: SolvisRemote unit: 1 value: 2 - alias: Heizung Standby Timer Finished trigger: platform: event event_type: timer.finished event_data: entity_id: timer.heizungaufstandbyfor action: - service: input_boolean.turn_off data: entity_id: input_boolean.heizungstandbyon","title":"Konfiguration Home-Assistant"},{"location":"projekte/solvis-heizung/#links-zu-solvis-doku","text":"Doku: Solvis Modbus Register","title":"Links zu Solvis Doku"},{"location":"projekte/stromverbrauch/","text":"(digitalen) Stromz\u00e4hler mit ESP8266 auslesen \u00b6 Das Auslesen eines digitalen Stromz\u00e4hlers (EhZ) geschieht anhand der optischen S0-Schnittstelle bei der der Stromz\u00e4hler den Verbrauch \u00fcber die Impulsrate einer IR-LED anzeigt. Hier zeigen 10000 Impulse 1 kwH an. \u00dcber die Pulsrate kann der aktuelle Leistungsbedarf in Watt berechnet werden. Die S0-Schnittstelle ist hier mittels einer IR-Led ausgef\u00fchrt die mittels eines Phototransistors oder wie in meinem Fall \u00fcber ein TCRT-5000 (IR-Licht/Abstandssensor) ausgelesen werden kann. Gut zu wissen: mit einer Handykamera (meist die Selfie-Kamera) kann man meist die IR-Signale \"sehen\" da dort kein IR-Filter eingebaut ist. Beim Hager EhZ sieht man allerdings nur die Signale der seriellen SML-Schnittstelle. Die Impulse der S0-IR-Led waren zu schwach um sie sichtbar in der Fotoansicht zu sehen. Hardware \u00b6 ESP8266 NodeMCU Phototransistor oder TCRT-5000 (IR-Licht/Abstandssensor) K\u00e4belchen USB-Netzteil Software auf ESP8266 \u00b6 ESPHome Auszug ESPhome YAML \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 - platform: pulse_counter pin: GPIO5 unit_of_measurement: 'W' name: 'Energieverbrauch' update_interval: 60s filters: # - multiply: 0.06 in KW - multiply: 6 # in W accuracy_decimals: 0 icon: 'mdi:flash' id: energieverbrauch_w # Dieser Sensor errechnet die Wh aus den aktuellen Verbrauchswerten in W - platform: total_daily_energy name: \"Tagesverbrauch\" power_id: energieverbrauch_w time: - platform: sntp id: my_time Home Assistant \u00b6 Dort wird \u00fcber die Integration \"utility_meter\" des Sensors \"sensor.tagesverbrauch\" (siehe ESPHome Sensor vom Typ \"total_daily_energy\") der Stromverbrauch in Wh \u00fcber die Zeitr\u00e4ume t\u00e4glich w\u00f6chentlich monatlich j\u00e4hrlich aufgenommen und angezeigt. Diese Sensoren dienen auch als Datenbasis zur Darstellung des Verbrauchs in Grafana via InfluxDB. Auszug Home Assistant Konfiguration \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 sensor : utility_meter : stromverbrauch_tag : source : sensor . tagesverbrauch cycle : daily stromverbrauch_woche : source : sensor . tagesverbrauch cycle : weekly stromverbrauch_monat : source : sensor . tagesverbrauch cycle : monthly stromverbrauch_jahr : source : sensor . tagesverbrauch cycle : yearly Verbrauchswerte in Grafana \u00b6","title":"(digitalen) Stromz\u00e4hler mit ESP8266 auslesen"},{"location":"projekte/stromverbrauch/#digitalen-stromzahler-mit-esp8266-auslesen","text":"Das Auslesen eines digitalen Stromz\u00e4hlers (EhZ) geschieht anhand der optischen S0-Schnittstelle bei der der Stromz\u00e4hler den Verbrauch \u00fcber die Impulsrate einer IR-LED anzeigt. Hier zeigen 10000 Impulse 1 kwH an. \u00dcber die Pulsrate kann der aktuelle Leistungsbedarf in Watt berechnet werden. Die S0-Schnittstelle ist hier mittels einer IR-Led ausgef\u00fchrt die mittels eines Phototransistors oder wie in meinem Fall \u00fcber ein TCRT-5000 (IR-Licht/Abstandssensor) ausgelesen werden kann. Gut zu wissen: mit einer Handykamera (meist die Selfie-Kamera) kann man meist die IR-Signale \"sehen\" da dort kein IR-Filter eingebaut ist. Beim Hager EhZ sieht man allerdings nur die Signale der seriellen SML-Schnittstelle. Die Impulse der S0-IR-Led waren zu schwach um sie sichtbar in der Fotoansicht zu sehen.","title":"(digitalen) Stromz\u00e4hler mit ESP8266 auslesen"},{"location":"projekte/stromverbrauch/#hardware","text":"ESP8266 NodeMCU Phototransistor oder TCRT-5000 (IR-Licht/Abstandssensor) K\u00e4belchen USB-Netzteil","title":"Hardware"},{"location":"projekte/stromverbrauch/#software-auf-esp8266","text":"ESPHome","title":"Software auf ESP8266"},{"location":"projekte/stromverbrauch/#auszug-esphome-yaml","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 - platform: pulse_counter pin: GPIO5 unit_of_measurement: 'W' name: 'Energieverbrauch' update_interval: 60s filters: # - multiply: 0.06 in KW - multiply: 6 # in W accuracy_decimals: 0 icon: 'mdi:flash' id: energieverbrauch_w # Dieser Sensor errechnet die Wh aus den aktuellen Verbrauchswerten in W - platform: total_daily_energy name: \"Tagesverbrauch\" power_id: energieverbrauch_w time: - platform: sntp id: my_time","title":"Auszug ESPhome YAML"},{"location":"projekte/stromverbrauch/#home-assistant","text":"Dort wird \u00fcber die Integration \"utility_meter\" des Sensors \"sensor.tagesverbrauch\" (siehe ESPHome Sensor vom Typ \"total_daily_energy\") der Stromverbrauch in Wh \u00fcber die Zeitr\u00e4ume t\u00e4glich w\u00f6chentlich monatlich j\u00e4hrlich aufgenommen und angezeigt. Diese Sensoren dienen auch als Datenbasis zur Darstellung des Verbrauchs in Grafana via InfluxDB.","title":"Home Assistant"},{"location":"projekte/stromverbrauch/#auszug-home-assistant-konfiguration","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 sensor : utility_meter : stromverbrauch_tag : source : sensor . tagesverbrauch cycle : daily stromverbrauch_woche : source : sensor . tagesverbrauch cycle : weekly stromverbrauch_monat : source : sensor . tagesverbrauch cycle : monthly stromverbrauch_jahr : source : sensor . tagesverbrauch cycle : yearly","title":"Auszug Home Assistant Konfiguration"},{"location":"projekte/stromverbrauch/#verbrauchswerte-in-grafana","text":"","title":"Verbrauchswerte in Grafana"},{"location":"projekte/tasterschaltung/","text":"Eltako Stromsto\u00dfrelais durch Shelly 1PM ersetzen \u00b6 Achtung! Arbeiten an 230V k\u00f6nnen t\u00f6dlich sein. Falls kein Know-How vorhanden ist, lieber einen Elektroinstallateur beauftragen! Durch ein Shelly 1PM wird eine Tasterschaltung f\u00fcr Flurlicht smart \u00fcber Home Assistant steuerbar. Zus\u00e4tzlich kann der Stromverbrauch gemessen werden. Eingesetzt wurden Shelly 1PM mit der Original Firmware ohne Aktivierung der Cloud-Anbindung. Anbindung an Home Assistant via MQTT welches nativ in der Firmware enthalten ist. Vorteil der Shelly1PM: man kann weiterhin \u00fcber die vorhandenen 230V Tasterschalter das Licht an und aus schalten. ben\u00f6tigte Hardware \u00b6 Shelly 1PM Wago Klemmen etwas Kabel Know How Konfiguration Shelly 1PM \u00b6 Damit der Shelly 1 PM als Stromsto\u00dfrelais fungiert, muss der Button-Type auf \"Momentary\" eingestellt werden. Home Assistant \u00b6 Zur automatischen Erkennung von Shelly Devices nutze ich das Shelly Discovery Skript von hier: Shelly Discovery Skript","title":"Eltako Stromsto\u00dfrelais durch Shelly 1PM ersetzen"},{"location":"projekte/tasterschaltung/#eltako-stromstorelais-durch-shelly-1pm-ersetzen","text":"Achtung! Arbeiten an 230V k\u00f6nnen t\u00f6dlich sein. Falls kein Know-How vorhanden ist, lieber einen Elektroinstallateur beauftragen! Durch ein Shelly 1PM wird eine Tasterschaltung f\u00fcr Flurlicht smart \u00fcber Home Assistant steuerbar. Zus\u00e4tzlich kann der Stromverbrauch gemessen werden. Eingesetzt wurden Shelly 1PM mit der Original Firmware ohne Aktivierung der Cloud-Anbindung. Anbindung an Home Assistant via MQTT welches nativ in der Firmware enthalten ist. Vorteil der Shelly1PM: man kann weiterhin \u00fcber die vorhandenen 230V Tasterschalter das Licht an und aus schalten.","title":"Eltako Stromsto\u00dfrelais durch Shelly 1PM ersetzen"},{"location":"projekte/tasterschaltung/#benotigte-hardware","text":"Shelly 1PM Wago Klemmen etwas Kabel Know How","title":"ben\u00f6tigte Hardware"},{"location":"projekte/tasterschaltung/#konfiguration-shelly-1pm","text":"Damit der Shelly 1 PM als Stromsto\u00dfrelais fungiert, muss der Button-Type auf \"Momentary\" eingestellt werden.","title":"Konfiguration Shelly 1PM"},{"location":"projekte/tasterschaltung/#home-assistant","text":"Zur automatischen Erkennung von Shelly Devices nutze ich das Shelly Discovery Skript von hier: Shelly Discovery Skript","title":"Home Assistant"},{"location":"projekte/wasserverbrauch/","text":"Wasserz\u00e4hler mit ESP32-Cam auslesen (Ai on the Edge) \u00b6 Ein \u00fcblicher Wasserz\u00e4hler kann leider nicht so einfach automatisch ausgelesen werden, es fehlen magnetische, elektronische oder sonstige Schnittstellen. Bleibt nur die M\u00f6glichkeit optisch per Kamera den Z\u00e4hlerstand irgendwie auszulesen. Viele Projekte haben schon einige Methoden probiert und funktionieren eher m\u00e4\u00dfig. Zuletzt fand ich ein Projekt welches hervorragend nun auch den Wasserz\u00e4hler zuverl\u00e4ssig auslesen kann. Das Projekt kann aber auch f\u00fcr andere Z\u00e4hlerst\u00e4nde verwendet werden, wie z.B. Stromz\u00e4hler. Das Projekt nennt sich Ai on the Edge und setzt sich aus den g\u00fcnstigen Hardwarekomponenten ESP32-Cam, eine kleine SD-Karte und einem vortrainierten neuronalem Netzwerk zusammen, das im Vorfeld vom Ersteller des Projektes mit vielen Bildern von Ziffern verschiedener Z\u00e4hler und analoger Zeigerpositionen trainiert wurde. Die ESP32-Cam wird zuerst auf den eigenen Z\u00e4hler montiert. Anschlie\u00dfend werden die Stellen der Ziffern und Zeiger definiert, die dann sp\u00e4ter zyklisch erkannt werden. Die Anbindung an Home Assistant geschieht dann per MQTT. ben\u00f6tigte Hardware \u00b6 ESP32-Cam K\u00e4belchen f\u00fcr Stromversorgung UART-TTL-USB-Adapter f\u00fcr die Programmierung der ESP32-Cam (hat kein USB wie eine NodeMCU) USB-Netzteil Geh\u00e4use gibt's gleich passend zum Projekt bei Thingiverse zum drucken Software/Dokumentation \u00b6 AI-on-the-edge-device Auszug Home Assistant YAML \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 sensor: - platform: \"mqtt\" name: \"Wasserz\u00e4hler\" state_topic: \"wasserzaehler/main/value\" value_template: \" {{ value }} \" unit_of_measurement: \"m\u00b3\" icon: \"mdi:water-pump\" - platform: \"mqtt\" name: \"Wasserz\u00e4hler_Liter\" state_topic: \"wasserzaehler/main/value\" value_template: \" {{ ( value | float * 1000 ) | round ( 2 ) }} \" unit_of_measurement: \"l\" icon: \"mdi:water-pump\" - platform: \"mqtt\" name: \"Wasserz\u00e4hler Flussrate\" state_topic: \"wasserzaehler/main/rate\" value_template: \" {{ value }} \" icon: \"mdi:swap-vertical\" - platform: \"mqtt\" name: \"Wasserz\u00e4hler letzter Wert\" state_topic: \"wasserzaehler/main/timestamp\" value_template: \" {{ value }} \" icon: \"mdi:clock-outline\" binary_sensor: - platform: \"mqtt\" name: \"Wasserz\u00e4hler Fehler\" state_topic: \"wasserzaehler/main/error\" value_template: \" {{ value != 'no error' }} \" json_attributes_topic: \"wasserzaehler/main/json\" icon: \"mdi:alert-circle\" utility_meter: wasserverbrauch_tag: source: sensor.wasserzahler cycle: daily wasserverbrauch_woche: source: sensor.wasserzahler cycle: weekly wasserverbrauch_monat: source: sensor.wasserzahler cycle: monthly wasserverbrauch_jahr: source: sensor.wasserzahler cycle: yearly wasserverbrauch_tag_liter: source: sensor.wasserzahler_liter cycle: daily wasserverbrauch_woche_liter: source: sensor.wasserzahler_liter cycle: weekly wasserverbrauch_monat_liter: source: sensor.wasserzahler_liter cycle: monthly wasserverbrauch_jahr_liter: source: sensor.wasserzahler_liter cycle: yearly","title":"Wasserz\u00e4hler mit ESP32-Cam auslesen (Ai on the Edge)"},{"location":"projekte/wasserverbrauch/#wasserzahler-mit-esp32-cam-auslesen-ai-on-the-edge","text":"Ein \u00fcblicher Wasserz\u00e4hler kann leider nicht so einfach automatisch ausgelesen werden, es fehlen magnetische, elektronische oder sonstige Schnittstellen. Bleibt nur die M\u00f6glichkeit optisch per Kamera den Z\u00e4hlerstand irgendwie auszulesen. Viele Projekte haben schon einige Methoden probiert und funktionieren eher m\u00e4\u00dfig. Zuletzt fand ich ein Projekt welches hervorragend nun auch den Wasserz\u00e4hler zuverl\u00e4ssig auslesen kann. Das Projekt kann aber auch f\u00fcr andere Z\u00e4hlerst\u00e4nde verwendet werden, wie z.B. Stromz\u00e4hler. Das Projekt nennt sich Ai on the Edge und setzt sich aus den g\u00fcnstigen Hardwarekomponenten ESP32-Cam, eine kleine SD-Karte und einem vortrainierten neuronalem Netzwerk zusammen, das im Vorfeld vom Ersteller des Projektes mit vielen Bildern von Ziffern verschiedener Z\u00e4hler und analoger Zeigerpositionen trainiert wurde. Die ESP32-Cam wird zuerst auf den eigenen Z\u00e4hler montiert. Anschlie\u00dfend werden die Stellen der Ziffern und Zeiger definiert, die dann sp\u00e4ter zyklisch erkannt werden. Die Anbindung an Home Assistant geschieht dann per MQTT.","title":"Wasserz\u00e4hler mit ESP32-Cam auslesen (Ai on the Edge)"},{"location":"projekte/wasserverbrauch/#benotigte-hardware","text":"ESP32-Cam K\u00e4belchen f\u00fcr Stromversorgung UART-TTL-USB-Adapter f\u00fcr die Programmierung der ESP32-Cam (hat kein USB wie eine NodeMCU) USB-Netzteil Geh\u00e4use gibt's gleich passend zum Projekt bei Thingiverse zum drucken","title":"ben\u00f6tigte Hardware"},{"location":"projekte/wasserverbrauch/#softwaredokumentation","text":"AI-on-the-edge-device","title":"Software/Dokumentation"},{"location":"projekte/wasserverbrauch/#auszug-home-assistant-yaml","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 sensor: - platform: \"mqtt\" name: \"Wasserz\u00e4hler\" state_topic: \"wasserzaehler/main/value\" value_template: \" {{ value }} \" unit_of_measurement: \"m\u00b3\" icon: \"mdi:water-pump\" - platform: \"mqtt\" name: \"Wasserz\u00e4hler_Liter\" state_topic: \"wasserzaehler/main/value\" value_template: \" {{ ( value | float * 1000 ) | round ( 2 ) }} \" unit_of_measurement: \"l\" icon: \"mdi:water-pump\" - platform: \"mqtt\" name: \"Wasserz\u00e4hler Flussrate\" state_topic: \"wasserzaehler/main/rate\" value_template: \" {{ value }} \" icon: \"mdi:swap-vertical\" - platform: \"mqtt\" name: \"Wasserz\u00e4hler letzter Wert\" state_topic: \"wasserzaehler/main/timestamp\" value_template: \" {{ value }} \" icon: \"mdi:clock-outline\" binary_sensor: - platform: \"mqtt\" name: \"Wasserz\u00e4hler Fehler\" state_topic: \"wasserzaehler/main/error\" value_template: \" {{ value != 'no error' }} \" json_attributes_topic: \"wasserzaehler/main/json\" icon: \"mdi:alert-circle\" utility_meter: wasserverbrauch_tag: source: sensor.wasserzahler cycle: daily wasserverbrauch_woche: source: sensor.wasserzahler cycle: weekly wasserverbrauch_monat: source: sensor.wasserzahler cycle: monthly wasserverbrauch_jahr: source: sensor.wasserzahler cycle: yearly wasserverbrauch_tag_liter: source: sensor.wasserzahler_liter cycle: daily wasserverbrauch_woche_liter: source: sensor.wasserzahler_liter cycle: weekly wasserverbrauch_monat_liter: source: sensor.wasserzahler_liter cycle: monthly wasserverbrauch_jahr_liter: source: sensor.wasserzahler_liter cycle: yearly","title":"Auszug Home Assistant YAML"}]}